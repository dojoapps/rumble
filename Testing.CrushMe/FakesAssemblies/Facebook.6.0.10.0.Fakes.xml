<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Facebook.6.0.10.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Facebook.Fakes.ShimDateTimeConvertor">
            <summary>Shim type of Facebook.DateTimeConvertor</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimDateTimeConvertor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimDateTimeConvertor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimDateTimeConvertor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimDateTimeConvertor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimDateTimeConvertor.EpochGet">
            <summary>Sets the shim of DateTimeConvertor.get_Epoch()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimDateTimeConvertor.FromIso8601FormattedDateTimeString">
            <summary>Sets the shim of DateTimeConvertor.FromIso8601FormattedDateTime(String iso8601DateTime)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimDateTimeConvertor.FromUnixTimeDouble">
            <summary>Sets the shim of DateTimeConvertor.FromUnixTime(Double unixTime)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimDateTimeConvertor.FromUnixTimeString">
            <summary>Sets the shim of DateTimeConvertor.FromUnixTime(String unixTime)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimDateTimeConvertor.StaticConstructor">
            <summary>Sets the shim of DateTimeConvertor.DateTimeConvertor()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimDateTimeConvertor.ToIso8601FormattedDateTimeDateTime">
            <summary>Sets the shim of DateTimeConvertor.ToIso8601FormattedDateTime(DateTime dateTime)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimDateTimeConvertor.ToUnixTimeDateTime">
            <summary>Sets the shim of DateTimeConvertor.ToUnixTime(DateTime dateTime)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimDateTimeConvertor.ToUnixTimeDateTimeOffset">
            <summary>Sets the shim of DateTimeConvertor.ToUnixTime(DateTimeOffset dateTime)</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookApiEventArgs">
            <summary>Shim type of Facebook.FacebookApiEventArgs</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookApiEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookApiEventArgs.#ctor(Facebook.FacebookApiEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookApiEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookApiEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiEventArgs.ConstructorExceptionBooleanObjectObject">
            <summary>Sets the shim of FacebookApiEventArgs.FacebookApiEventArgs(Exception error, Boolean cancelled, Object userState, Object result)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiEventArgs.GetResultData">
            <summary>Sets the shim of FacebookApiEventArgs.GetResultData()</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookApiEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiEventArgs.AllInstances.GetResultData">
            <summary>Sets the shim of FacebookApiEventArgs.GetResultData()</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookApiException">
            <summary>Shim type of Facebook.FacebookApiException</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookApiException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookApiException.#ctor(Facebook.FacebookApiException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookApiException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookApiException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookApiException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.Constructor">
            <summary>Sets the shim of FacebookApiException.FacebookApiException()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of FacebookApiException.FacebookApiException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.ConstructorString">
            <summary>Sets the shim of FacebookApiException.FacebookApiException(String message)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.ConstructorStringException">
            <summary>Sets the shim of FacebookApiException.FacebookApiException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.ConstructorStringString">
            <summary>Sets the shim of FacebookApiException.FacebookApiException(String message, String errorType)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.ConstructorStringStringInt32">
            <summary>Sets the shim of FacebookApiException.FacebookApiException(String message, String errorType, Int32 errorCode)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.ConstructorStringStringInt32Int32">
            <summary>Sets the shim of FacebookApiException.FacebookApiException(String message, String errorType, Int32 errorCode, Int32 errorSubcode)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.ErrorCodeGet">
            <summary>Sets the shim of FacebookApiException.get_ErrorCode()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.ErrorCodeSetInt32">
            <summary>Sets the shim of FacebookApiException.set_ErrorCode(Int32 value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.ErrorSubcodeGet">
            <summary>Sets the shim of FacebookApiException.get_ErrorSubcode()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.ErrorSubcodeSetInt32">
            <summary>Sets the shim of FacebookApiException.set_ErrorSubcode(Int32 value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.ErrorTypeGet">
            <summary>Sets the shim of FacebookApiException.get_ErrorType()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.ErrorTypeSetString">
            <summary>Sets the shim of FacebookApiException.set_ErrorType(String value)</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookApiException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.AllInstances.ErrorCodeGet">
            <summary>Sets the shim of FacebookApiException.get_ErrorCode()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.AllInstances.ErrorCodeSetInt32">
            <summary>Sets the shim of FacebookApiException.set_ErrorCode(Int32 value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.AllInstances.ErrorSubcodeGet">
            <summary>Sets the shim of FacebookApiException.get_ErrorSubcode()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.AllInstances.ErrorSubcodeSetInt32">
            <summary>Sets the shim of FacebookApiException.set_ErrorSubcode(Int32 value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.AllInstances.ErrorTypeGet">
            <summary>Sets the shim of FacebookApiException.get_ErrorType()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiException.AllInstances.ErrorTypeSetString">
            <summary>Sets the shim of FacebookApiException.set_ErrorType(String value)</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookApiLimitException">
            <summary>Shim type of Facebook.FacebookApiLimitException</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookApiLimitException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookApiLimitException.#ctor(Facebook.FacebookApiLimitException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookApiLimitException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookApiLimitException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookApiLimitException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiLimitException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiLimitException.Constructor">
            <summary>Sets the shim of FacebookApiLimitException.FacebookApiLimitException()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiLimitException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of FacebookApiLimitException.FacebookApiLimitException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiLimitException.ConstructorString">
            <summary>Sets the shim of FacebookApiLimitException.FacebookApiLimitException(String message)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiLimitException.ConstructorStringException">
            <summary>Sets the shim of FacebookApiLimitException.FacebookApiLimitException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookApiLimitException.ConstructorStringString">
            <summary>Sets the shim of FacebookApiLimitException.FacebookApiLimitException(String message, String errorType)</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookApiLimitException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookBatchParameter">
            <summary>Shim type of Facebook.FacebookBatchParameter</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookBatchParameter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookBatchParameter.#ctor(Facebook.FacebookBatchParameter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookBatchParameter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookBatchParameter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.Constructor">
            <summary>Sets the shim of FacebookBatchParameter.FacebookBatchParameter()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.ConstructorHttpMethodString">
            <summary>Sets the shim of FacebookBatchParameter.FacebookBatchParameter(HttpMethod httpMethod, String path)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.ConstructorHttpMethodStringObject">
            <summary>Sets the shim of FacebookBatchParameter.FacebookBatchParameter(HttpMethod httpMethod, String path, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.ConstructorString">
            <summary>Sets the shim of FacebookBatchParameter.FacebookBatchParameter(String path)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.ConstructorStringObject">
            <summary>Sets the shim of FacebookBatchParameter.FacebookBatchParameter(String path, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.DataGet">
            <summary>Sets the shim of FacebookBatchParameter.get_Data()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.DataSetObject">
            <summary>Sets the shim of FacebookBatchParameter.set_Data(Object value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.HttpMethodGet">
            <summary>Sets the shim of FacebookBatchParameter.get_HttpMethod()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.HttpMethodSetHttpMethod">
            <summary>Sets the shim of FacebookBatchParameter.set_HttpMethod(HttpMethod value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.ParametersGet">
            <summary>Sets the shim of FacebookBatchParameter.get_Parameters()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.ParametersSetObject">
            <summary>Sets the shim of FacebookBatchParameter.set_Parameters(Object value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.PathGet">
            <summary>Sets the shim of FacebookBatchParameter.get_Path()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.PathSetString">
            <summary>Sets the shim of FacebookBatchParameter.set_Path(String value)</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookBatchParameter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.AllInstances.DataGet">
            <summary>Sets the shim of FacebookBatchParameter.get_Data()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.AllInstances.DataSetObject">
            <summary>Sets the shim of FacebookBatchParameter.set_Data(Object value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.AllInstances.HttpMethodGet">
            <summary>Sets the shim of FacebookBatchParameter.get_HttpMethod()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.AllInstances.HttpMethodSetHttpMethod">
            <summary>Sets the shim of FacebookBatchParameter.set_HttpMethod(HttpMethod value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.AllInstances.ParametersGet">
            <summary>Sets the shim of FacebookBatchParameter.get_Parameters()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.AllInstances.ParametersSetObject">
            <summary>Sets the shim of FacebookBatchParameter.set_Parameters(Object value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.AllInstances.PathGet">
            <summary>Sets the shim of FacebookBatchParameter.get_Path()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookBatchParameter.AllInstances.PathSetString">
            <summary>Sets the shim of FacebookBatchParameter.set_Path(String value)</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookClient">
            <summary>Shim type of Facebook.FacebookClient</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookClient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookClient.#ctor(Facebook.FacebookClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookClient.TransferCompletionToTaskOf1TaskCompletionSourceOfM0AsyncCompletedEventArgsFuncOfM0Action``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Threading.Tasks.TaskCompletionSource{``0},System.ComponentModel.AsyncCompletedEventArgs,System.Func{``0},System.Action})">
            <summary>Sets the shim of FacebookClient.TransferCompletionToTask(TaskCompletionSource`1&lt;!!0&gt; tcs, AsyncCompletedEventArgs e, Func`1&lt;!!0&gt; getResult, Action unregisterHandler)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AccessTokenGet">
            <summary>Sets the shim of FacebookClient.get_AccessToken()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AccessTokenSetString">
            <summary>Sets the shim of FacebookClient.set_AccessToken(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.ApiAsyncHttpMethodStringObjectTypeObject">
            <summary>Sets the shim of FacebookClient.ApiAsync(HttpMethod httpMethod, String path, Object parameters, Type resultType, Object userState)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.ApiHttpMethodStringObjectType">
            <summary>Sets the shim of FacebookClient.Api(HttpMethod httpMethod, String path, Object parameters, Type resultType)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.ApiTaskAsyncHttpMethodStringObjectTypeObjectCancellationToken">
            <summary>Sets the shim of FacebookClient.ApiTaskAsync(HttpMethod httpMethod, String path, Object parameters, Type resultType, Object userState, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.ApiTaskAsyncHttpMethodStringObjectTypeObjectCancellationTokenIProgressOfFacebookUploadProgressChangedEventArgs">
            <summary>Sets the shim of FacebookClient.ApiTaskAsync(HttpMethod httpMethod, String path, Object parameters, Type resultType, Object userState, CancellationToken cancellationToken, IProgress`1&lt;FacebookUploadProgressChangedEventArgs&gt; uploadProgress)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AppIdGet">
            <summary>Sets the shim of FacebookClient.get_AppId()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AppIdSetString">
            <summary>Sets the shim of FacebookClient.set_AppId(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AppSecretGet">
            <summary>Sets the shim of FacebookClient.get_AppSecret()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AppSecretSetString">
            <summary>Sets the shim of FacebookClient.set_AppSecret(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.Base64UrlDecodeString">
            <summary>Sets the shim of FacebookClient.Base64UrlDecode(String base64UrlSafeString)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.BatchAsyncFacebookBatchParameterArray">
            <summary>Sets the shim of FacebookClient.BatchAsync(FacebookBatchParameter[] batchParameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.BatchAsyncFacebookBatchParameterArrayObject">
            <summary>Sets the shim of FacebookClient.BatchAsync(FacebookBatchParameter[] batchParameters, Object userState)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.BatchAsyncFacebookBatchParameterArrayObjectObject">
            <summary>Sets the shim of FacebookClient.BatchAsync(FacebookBatchParameter[] batchParameters, Object userState, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.BatchFacebookBatchParameterArray">
            <summary>Sets the shim of FacebookClient.Batch(FacebookBatchParameter[] batchParameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.BatchFacebookBatchParameterArrayObject">
            <summary>Sets the shim of FacebookClient.Batch(FacebookBatchParameter[] batchParameters, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.BatchTaskAsyncFacebookBatchParameterArray">
            <summary>Sets the shim of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.BatchTaskAsyncFacebookBatchParameterArrayObjectCancellationToken">
            <summary>Sets the shim of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters, Object userToken, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.BatchTaskAsyncFacebookBatchParameterArrayObjectCancellationTokenIProgressOfFacebookUploadProgressChangedEventArgs">
            <summary>Sets the shim of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters, Object userState, CancellationToken cancellationToken, IProgress`1&lt;FacebookUploadProgressChangedEventArgs&gt; uploadProgress)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.BatchTaskAsyncFacebookBatchParameterArrayObjectObjectCancellationToken">
            <summary>Sets the shim of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters, Object userToken, Object parameters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.BatchTaskAsyncFacebookBatchParameterArrayObjectObjectCancellationTokenIProgressOfFacebookUploadProgressChangedEventArgs">
            <summary>Sets the shim of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters, Object userState, Object parameters, CancellationToken cancellationToken, IProgress`1&lt;FacebookUploadProgressChangedEventArgs&gt; uploadProgress)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.BoundaryGet">
            <summary>Sets the shim of FacebookClient.get_Boundary()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.BoundarySetFuncOfString">
            <summary>Sets the shim of FacebookClient.set_Boundary(Func`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.BuildHttpQueryObjectFuncOfStringString">
            <summary>Sets the shim of FacebookClient.BuildHttpQuery(Object parameter, Func`2&lt;String,String&gt; encode)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.CancelAsync">
            <summary>Sets the shim of FacebookClient.CancelAsync()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.ComputeHmacSha256HashByteArrayByteArray">
            <summary>Sets the shim of FacebookClient.ComputeHmacSha256Hash(Byte[] data, Byte[] key)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.Constructor">
            <summary>Sets the shim of FacebookClient.FacebookClient()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.ConstructorString">
            <summary>Sets the shim of FacebookClient.FacebookClient(String accessToken)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.DeleteAsyncString">
            <summary>Sets the shim of FacebookClient.DeleteAsync(String path)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.DeleteAsyncStringObjectObject">
            <summary>Sets the shim of FacebookClient.DeleteAsync(String path, Object parameters, Object userState)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.DeleteCompletedAddEventHandlerOfFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.add_DeleteCompleted(EventHandler`1&lt;FacebookApiEventArgs&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.DeleteCompletedRemoveEventHandlerOfFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.remove_DeleteCompleted(EventHandler`1&lt;FacebookApiEventArgs&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.DeleteString">
            <summary>Sets the shim of FacebookClient.Delete(String path)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.DeleteStringObject">
            <summary>Sets the shim of FacebookClient.Delete(String path, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.DeleteTaskAsyncString">
            <summary>Sets the shim of FacebookClient.DeleteTaskAsync(String path)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.DeleteTaskAsyncStringObjectCancellationToken">
            <summary>Sets the shim of FacebookClient.DeleteTaskAsync(String path, Object parameters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.DeserializeJsonGet">
            <summary>Sets the shim of FacebookClient.get_DeserializeJson()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.DeserializeJsonSetFuncOfStringTypeObject">
            <summary>Sets the shim of FacebookClient.set_DeserializeJson(Func`3&lt;String,Type,Object&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.GetAsyncObject">
            <summary>Sets the shim of FacebookClient.GetAsync(Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.GetAsyncString">
            <summary>Sets the shim of FacebookClient.GetAsync(String path)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.GetAsyncStringObject">
            <summary>Sets the shim of FacebookClient.GetAsync(String path, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.GetAsyncStringObjectObject">
            <summary>Sets the shim of FacebookClient.GetAsync(String path, Object parameters, Object userState)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.GetCompletedAddEventHandlerOfFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.add_GetCompleted(EventHandler`1&lt;FacebookApiEventArgs&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.GetCompletedRemoveEventHandlerOfFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.remove_GetCompleted(EventHandler`1&lt;FacebookApiEventArgs&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.GetLoginUrlObject">
            <summary>Sets the shim of FacebookClient.GetLoginUrl(Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.GetLogoutUrlObject">
            <summary>Sets the shim of FacebookClient.GetLogoutUrl(Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.GetObject">
            <summary>Sets the shim of FacebookClient.Get(Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.GetString">
            <summary>Sets the shim of FacebookClient.Get(String path)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.GetStringObject">
            <summary>Sets the shim of FacebookClient.Get(String path, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.GetTaskAsyncObject">
            <summary>Sets the shim of FacebookClient.GetTaskAsync(Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.GetTaskAsyncString">
            <summary>Sets the shim of FacebookClient.GetTaskAsync(String path)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.GetTaskAsyncStringObject">
            <summary>Sets the shim of FacebookClient.GetTaskAsync(String path, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.GetTaskAsyncStringObjectCancellationToken">
            <summary>Sets the shim of FacebookClient.GetTaskAsync(String path, Object parameters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.HttpWebRequestFactoryGet">
            <summary>Sets the shim of FacebookClient.get_HttpWebRequestFactory()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.HttpWebRequestFactorySetFuncOfUriHttpWebRequestWrapper">
            <summary>Sets the shim of FacebookClient.set_HttpWebRequestFactory(Func`2&lt;Uri,HttpWebRequestWrapper&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.IsSecureConnectionGet">
            <summary>Sets the shim of FacebookClient.get_IsSecureConnection()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.IsSecureConnectionSetBoolean">
            <summary>Sets the shim of FacebookClient.set_IsSecureConnection(Boolean value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.OnCompletedHttpMethodFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.OnCompleted(HttpMethod httpMethod, FacebookApiEventArgs args)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.OnDeleteCompletedFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.OnDeleteCompleted(FacebookApiEventArgs args)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.OnGetCompletedFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.OnGetCompleted(FacebookApiEventArgs args)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.OnPostCompletedFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.OnPostCompleted(FacebookApiEventArgs args)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.OnUploadProgressChangedFacebookUploadProgressChangedEventArgs">
            <summary>Sets the shim of FacebookClient.OnUploadProgressChanged(FacebookUploadProgressChangedEventArgs args)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.ParseOAuthCallbackUrlUri">
            <summary>Sets the shim of FacebookClient.ParseOAuthCallbackUrl(Uri uri)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.ParseSignedRequestString">
            <summary>Sets the shim of FacebookClient.ParseSignedRequest(String signedRequestValue)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.ParseSignedRequestStringString">
            <summary>Sets the shim of FacebookClient.ParseSignedRequest(String appSecret, String signedRequestValue)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.ParseUrlQueryStringStringIDictionaryOfStringObjectBoolean">
            <summary>Sets the shim of FacebookClient.ParseUrlQueryString(String path, IDictionary`2&lt;String,Object&gt; parameters, Boolean forceParseAllUrls)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.ParseUrlQueryStringStringIDictionaryOfStringObjectBooleanUriOutBooleanOut">
            <summary>Sets the shim of FacebookClient.ParseUrlQueryString(String path, IDictionary`2&lt;String,Object&gt; parameters, Boolean forceParseAllUrls, Uri&amp; uri, Boolean&amp; isLegacyRestApi)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.PostAsyncObject">
            <summary>Sets the shim of FacebookClient.PostAsync(Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.PostAsyncStringObject">
            <summary>Sets the shim of FacebookClient.PostAsync(String path, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.PostAsyncStringObjectObject">
            <summary>Sets the shim of FacebookClient.PostAsync(String path, Object parameters, Object userState)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.PostCompletedAddEventHandlerOfFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.add_PostCompleted(EventHandler`1&lt;FacebookApiEventArgs&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.PostCompletedRemoveEventHandlerOfFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.remove_PostCompleted(EventHandler`1&lt;FacebookApiEventArgs&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.PostObject">
            <summary>Sets the shim of FacebookClient.Post(Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.PostStringObject">
            <summary>Sets the shim of FacebookClient.Post(String path, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.PostTaskAsyncObject">
            <summary>Sets the shim of FacebookClient.PostTaskAsync(Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.PostTaskAsyncStringObject">
            <summary>Sets the shim of FacebookClient.PostTaskAsync(String path, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.PostTaskAsyncStringObjectCancellationToken">
            <summary>Sets the shim of FacebookClient.PostTaskAsync(String path, Object parameters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.PostTaskAsyncStringObjectObjectCancellationToken">
            <summary>Sets the shim of FacebookClient.PostTaskAsync(String path, Object parameters, Object userState, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.PostTaskAsyncStringObjectObjectCancellationTokenIProgressOfFacebookUploadProgressChangedEventArgs">
            <summary>Sets the shim of FacebookClient.PostTaskAsync(String path, Object parameters, Object userState, CancellationToken cancellationToken, IProgress`1&lt;FacebookUploadProgressChangedEventArgs&gt; uploadProgress)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.PrepareBatchRequestFacebookBatchParameterArrayObject">
            <summary>Sets the shim of FacebookClient.PrepareBatchRequest(FacebookBatchParameter[] batchParameters, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.ProcessBatchResponseObjectIListOfInt32">
            <summary>Sets the shim of FacebookClient.ProcessBatchResponse(Object result, IList`1&lt;Int32&gt; batchEtags)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.RemoveTaskAsyncHandlersHttpMethodEventHandlerOfFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.RemoveTaskAsyncHandlers(HttpMethod httpMethod, EventHandler`1&lt;FacebookApiEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.SerializeJsonGet">
            <summary>Sets the shim of FacebookClient.get_SerializeJson()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.SerializeJsonSetFuncOfObjectString">
            <summary>Sets the shim of FacebookClient.set_SerializeJson(Func`2&lt;Object,String&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.SerializeParametersIDictionaryOfStringObject">
            <summary>Sets the shim of FacebookClient.SerializeParameters(IDictionary`2&lt;String,Object&gt; parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.SetDefaultHttpWebRequestFactoryFuncOfUriHttpWebRequestWrapper">
            <summary>Sets the shim of FacebookClient.SetDefaultHttpWebRequestFactory(Func`2&lt;Uri,HttpWebRequestWrapper&gt; httpWebRequestFactory)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.SetDefaultJsonSerializersFuncOfObjectStringFuncOfStringTypeObject">
            <summary>Sets the shim of FacebookClient.SetDefaultJsonSerializers(Func`2&lt;Object,String&gt; jsonSerializer, Func`3&lt;String,Type,Object&gt; jsonDeserializer)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.StaticConstructor">
            <summary>Sets the shim of FacebookClient.FacebookClient()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.ToDictionaryObjectIDictionaryOfStringFacebookMediaObjectOutIDictionaryOfStringFacebookMediaStreamOut">
            <summary>Sets the shim of FacebookClient.ToDictionary(Object parameters, IDictionary`2&lt;String,FacebookMediaObject&gt;&amp; mediaObjects, IDictionary`2&lt;String,FacebookMediaStream&gt;&amp; mediaStreams)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.TryParseOAuthCallbackUrlUriFacebookOAuthResultOut">
            <summary>Sets the shim of FacebookClient.TryParseOAuthCallbackUrl(Uri url, FacebookOAuthResult&amp; facebookOAuthResult)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.TryParseSignedRequestStringObjectOut">
            <summary>Sets the shim of FacebookClient.TryParseSignedRequest(String signedRequestValue, Object&amp; signedRequest)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.TryParseSignedRequestStringStringObjectOut">
            <summary>Sets the shim of FacebookClient.TryParseSignedRequest(String appSecret, String signedRequestValue, Object&amp; signedRequest)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.UploadProgressChangedAddEventHandlerOfFacebookUploadProgressChangedEventArgs">
            <summary>Sets the shim of FacebookClient.add_UploadProgressChanged(EventHandler`1&lt;FacebookUploadProgressChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.UploadProgressChangedRemoveEventHandlerOfFacebookUploadProgressChangedEventArgs">
            <summary>Sets the shim of FacebookClient.remove_UploadProgressChanged(EventHandler`1&lt;FacebookUploadProgressChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.UseFacebookBetaGet">
            <summary>Sets the shim of FacebookClient.get_UseFacebookBeta()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.UseFacebookBetaSetBoolean">
            <summary>Sets the shim of FacebookClient.set_UseFacebookBeta(Boolean value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient._ToDictionaryb__2PropertyInfo">
            <summary>Sets the shim of FacebookClient.&lt;ToDictionary&gt;b__2(PropertyInfo p)</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.AccessTokenGet">
            <summary>Sets the shim of FacebookClient.get_AccessToken()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.AccessTokenSetString">
            <summary>Sets the shim of FacebookClient.set_AccessToken(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.ApiAsyncHttpMethodStringObjectTypeObject">
            <summary>Sets the shim of FacebookClient.ApiAsync(HttpMethod httpMethod, String path, Object parameters, Type resultType, Object userState)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.ApiHttpMethodStringObjectType">
            <summary>Sets the shim of FacebookClient.Api(HttpMethod httpMethod, String path, Object parameters, Type resultType)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.ApiTaskAsyncHttpMethodStringObjectTypeObjectCancellationToken">
            <summary>Sets the shim of FacebookClient.ApiTaskAsync(HttpMethod httpMethod, String path, Object parameters, Type resultType, Object userState, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.ApiTaskAsyncHttpMethodStringObjectTypeObjectCancellationTokenIProgressOfFacebookUploadProgressChangedEventArgs">
            <summary>Sets the shim of FacebookClient.ApiTaskAsync(HttpMethod httpMethod, String path, Object parameters, Type resultType, Object userState, CancellationToken cancellationToken, IProgress`1&lt;FacebookUploadProgressChangedEventArgs&gt; uploadProgress)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.AppIdGet">
            <summary>Sets the shim of FacebookClient.get_AppId()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.AppIdSetString">
            <summary>Sets the shim of FacebookClient.set_AppId(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.AppSecretGet">
            <summary>Sets the shim of FacebookClient.get_AppSecret()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.AppSecretSetString">
            <summary>Sets the shim of FacebookClient.set_AppSecret(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.BatchAsyncFacebookBatchParameterArray">
            <summary>Sets the shim of FacebookClient.BatchAsync(FacebookBatchParameter[] batchParameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.BatchAsyncFacebookBatchParameterArrayObject">
            <summary>Sets the shim of FacebookClient.BatchAsync(FacebookBatchParameter[] batchParameters, Object userState)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.BatchAsyncFacebookBatchParameterArrayObjectObject">
            <summary>Sets the shim of FacebookClient.BatchAsync(FacebookBatchParameter[] batchParameters, Object userState, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.BatchFacebookBatchParameterArray">
            <summary>Sets the shim of FacebookClient.Batch(FacebookBatchParameter[] batchParameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.BatchFacebookBatchParameterArrayObject">
            <summary>Sets the shim of FacebookClient.Batch(FacebookBatchParameter[] batchParameters, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.BatchTaskAsyncFacebookBatchParameterArray">
            <summary>Sets the shim of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.BatchTaskAsyncFacebookBatchParameterArrayObjectCancellationToken">
            <summary>Sets the shim of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters, Object userToken, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.BatchTaskAsyncFacebookBatchParameterArrayObjectCancellationTokenIProgressOfFacebookUploadProgressChangedEventArgs">
            <summary>Sets the shim of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters, Object userState, CancellationToken cancellationToken, IProgress`1&lt;FacebookUploadProgressChangedEventArgs&gt; uploadProgress)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.BatchTaskAsyncFacebookBatchParameterArrayObjectObjectCancellationToken">
            <summary>Sets the shim of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters, Object userToken, Object parameters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.BatchTaskAsyncFacebookBatchParameterArrayObjectObjectCancellationTokenIProgressOfFacebookUploadProgressChangedEventArgs">
            <summary>Sets the shim of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters, Object userState, Object parameters, CancellationToken cancellationToken, IProgress`1&lt;FacebookUploadProgressChangedEventArgs&gt; uploadProgress)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.BoundaryGet">
            <summary>Sets the shim of FacebookClient.get_Boundary()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.BoundarySetFuncOfString">
            <summary>Sets the shim of FacebookClient.set_Boundary(Func`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.CancelAsync">
            <summary>Sets the shim of FacebookClient.CancelAsync()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.DeleteAsyncString">
            <summary>Sets the shim of FacebookClient.DeleteAsync(String path)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.DeleteAsyncStringObjectObject">
            <summary>Sets the shim of FacebookClient.DeleteAsync(String path, Object parameters, Object userState)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.DeleteCompletedAddEventHandlerOfFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.add_DeleteCompleted(EventHandler`1&lt;FacebookApiEventArgs&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.DeleteCompletedRemoveEventHandlerOfFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.remove_DeleteCompleted(EventHandler`1&lt;FacebookApiEventArgs&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.DeleteString">
            <summary>Sets the shim of FacebookClient.Delete(String path)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.DeleteStringObject">
            <summary>Sets the shim of FacebookClient.Delete(String path, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.DeleteTaskAsyncString">
            <summary>Sets the shim of FacebookClient.DeleteTaskAsync(String path)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.DeleteTaskAsyncStringObjectCancellationToken">
            <summary>Sets the shim of FacebookClient.DeleteTaskAsync(String path, Object parameters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.DeserializeJsonGet">
            <summary>Sets the shim of FacebookClient.get_DeserializeJson()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.DeserializeJsonSetFuncOfStringTypeObject">
            <summary>Sets the shim of FacebookClient.set_DeserializeJson(Func`3&lt;String,Type,Object&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.GetAsyncObject">
            <summary>Sets the shim of FacebookClient.GetAsync(Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.GetAsyncString">
            <summary>Sets the shim of FacebookClient.GetAsync(String path)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.GetAsyncStringObject">
            <summary>Sets the shim of FacebookClient.GetAsync(String path, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.GetAsyncStringObjectObject">
            <summary>Sets the shim of FacebookClient.GetAsync(String path, Object parameters, Object userState)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.GetCompletedAddEventHandlerOfFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.add_GetCompleted(EventHandler`1&lt;FacebookApiEventArgs&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.GetCompletedRemoveEventHandlerOfFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.remove_GetCompleted(EventHandler`1&lt;FacebookApiEventArgs&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.GetLoginUrlObject">
            <summary>Sets the shim of FacebookClient.GetLoginUrl(Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.GetLogoutUrlObject">
            <summary>Sets the shim of FacebookClient.GetLogoutUrl(Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.GetObject">
            <summary>Sets the shim of FacebookClient.Get(Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.GetString">
            <summary>Sets the shim of FacebookClient.Get(String path)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.GetStringObject">
            <summary>Sets the shim of FacebookClient.Get(String path, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.GetTaskAsyncObject">
            <summary>Sets the shim of FacebookClient.GetTaskAsync(Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.GetTaskAsyncString">
            <summary>Sets the shim of FacebookClient.GetTaskAsync(String path)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.GetTaskAsyncStringObject">
            <summary>Sets the shim of FacebookClient.GetTaskAsync(String path, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.GetTaskAsyncStringObjectCancellationToken">
            <summary>Sets the shim of FacebookClient.GetTaskAsync(String path, Object parameters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.HttpWebRequestFactoryGet">
            <summary>Sets the shim of FacebookClient.get_HttpWebRequestFactory()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.HttpWebRequestFactorySetFuncOfUriHttpWebRequestWrapper">
            <summary>Sets the shim of FacebookClient.set_HttpWebRequestFactory(Func`2&lt;Uri,HttpWebRequestWrapper&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.IsSecureConnectionGet">
            <summary>Sets the shim of FacebookClient.get_IsSecureConnection()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.IsSecureConnectionSetBoolean">
            <summary>Sets the shim of FacebookClient.set_IsSecureConnection(Boolean value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.OnCompletedHttpMethodFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.OnCompleted(HttpMethod httpMethod, FacebookApiEventArgs args)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.OnDeleteCompletedFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.OnDeleteCompleted(FacebookApiEventArgs args)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.OnGetCompletedFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.OnGetCompleted(FacebookApiEventArgs args)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.OnPostCompletedFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.OnPostCompleted(FacebookApiEventArgs args)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.OnUploadProgressChangedFacebookUploadProgressChangedEventArgs">
            <summary>Sets the shim of FacebookClient.OnUploadProgressChanged(FacebookUploadProgressChangedEventArgs args)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.ParseOAuthCallbackUrlUri">
            <summary>Sets the shim of FacebookClient.ParseOAuthCallbackUrl(Uri uri)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.ParseSignedRequestString">
            <summary>Sets the shim of FacebookClient.ParseSignedRequest(String signedRequestValue)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.ParseSignedRequestStringString">
            <summary>Sets the shim of FacebookClient.ParseSignedRequest(String appSecret, String signedRequestValue)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.PostAsyncObject">
            <summary>Sets the shim of FacebookClient.PostAsync(Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.PostAsyncStringObject">
            <summary>Sets the shim of FacebookClient.PostAsync(String path, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.PostAsyncStringObjectObject">
            <summary>Sets the shim of FacebookClient.PostAsync(String path, Object parameters, Object userState)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.PostCompletedAddEventHandlerOfFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.add_PostCompleted(EventHandler`1&lt;FacebookApiEventArgs&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.PostCompletedRemoveEventHandlerOfFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.remove_PostCompleted(EventHandler`1&lt;FacebookApiEventArgs&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.PostObject">
            <summary>Sets the shim of FacebookClient.Post(Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.PostStringObject">
            <summary>Sets the shim of FacebookClient.Post(String path, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.PostTaskAsyncObject">
            <summary>Sets the shim of FacebookClient.PostTaskAsync(Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.PostTaskAsyncStringObject">
            <summary>Sets the shim of FacebookClient.PostTaskAsync(String path, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.PostTaskAsyncStringObjectCancellationToken">
            <summary>Sets the shim of FacebookClient.PostTaskAsync(String path, Object parameters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.PostTaskAsyncStringObjectObjectCancellationToken">
            <summary>Sets the shim of FacebookClient.PostTaskAsync(String path, Object parameters, Object userState, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.PostTaskAsyncStringObjectObjectCancellationTokenIProgressOfFacebookUploadProgressChangedEventArgs">
            <summary>Sets the shim of FacebookClient.PostTaskAsync(String path, Object parameters, Object userState, CancellationToken cancellationToken, IProgress`1&lt;FacebookUploadProgressChangedEventArgs&gt; uploadProgress)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.PrepareBatchRequestFacebookBatchParameterArrayObject">
            <summary>Sets the shim of FacebookClient.PrepareBatchRequest(FacebookBatchParameter[] batchParameters, Object parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.ProcessBatchResponseObjectIListOfInt32">
            <summary>Sets the shim of FacebookClient.ProcessBatchResponse(Object result, IList`1&lt;Int32&gt; batchEtags)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.RemoveTaskAsyncHandlersHttpMethodEventHandlerOfFacebookApiEventArgs">
            <summary>Sets the shim of FacebookClient.RemoveTaskAsyncHandlers(HttpMethod httpMethod, EventHandler`1&lt;FacebookApiEventArgs&gt; handler)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.SerializeJsonGet">
            <summary>Sets the shim of FacebookClient.get_SerializeJson()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.SerializeJsonSetFuncOfObjectString">
            <summary>Sets the shim of FacebookClient.set_SerializeJson(Func`2&lt;Object,String&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.SerializeParametersIDictionaryOfStringObject">
            <summary>Sets the shim of FacebookClient.SerializeParameters(IDictionary`2&lt;String,Object&gt; parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.TryParseOAuthCallbackUrlUriFacebookOAuthResultOut">
            <summary>Sets the shim of FacebookClient.TryParseOAuthCallbackUrl(Uri url, FacebookOAuthResult&amp; facebookOAuthResult)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.TryParseSignedRequestStringObjectOut">
            <summary>Sets the shim of FacebookClient.TryParseSignedRequest(String signedRequestValue, Object&amp; signedRequest)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.TryParseSignedRequestStringStringObjectOut">
            <summary>Sets the shim of FacebookClient.TryParseSignedRequest(String appSecret, String signedRequestValue, Object&amp; signedRequest)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.UploadProgressChangedAddEventHandlerOfFacebookUploadProgressChangedEventArgs">
            <summary>Sets the shim of FacebookClient.add_UploadProgressChanged(EventHandler`1&lt;FacebookUploadProgressChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.UploadProgressChangedRemoveEventHandlerOfFacebookUploadProgressChangedEventArgs">
            <summary>Sets the shim of FacebookClient.remove_UploadProgressChanged(EventHandler`1&lt;FacebookUploadProgressChangedEventArgs&gt; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.UseFacebookBetaGet">
            <summary>Sets the shim of FacebookClient.get_UseFacebookBeta()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookClient.AllInstances.UseFacebookBetaSetBoolean">
            <summary>Sets the shim of FacebookClient.set_UseFacebookBeta(Boolean value)</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookMediaObject">
            <summary>Shim type of Facebook.FacebookMediaObject</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookMediaObject.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookMediaObject.#ctor(Facebook.FacebookMediaObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookMediaObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookMediaObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaObject.Constructor">
            <summary>Sets the shim of FacebookMediaObject.FacebookMediaObject()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaObject.ContentTypeGet">
            <summary>Sets the shim of FacebookMediaObject.get_ContentType()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaObject.ContentTypeSetString">
            <summary>Sets the shim of FacebookMediaObject.set_ContentType(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaObject.FileNameGet">
            <summary>Sets the shim of FacebookMediaObject.get_FileName()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaObject.FileNameSetString">
            <summary>Sets the shim of FacebookMediaObject.set_FileName(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaObject.GetValue">
            <summary>Sets the shim of FacebookMediaObject.GetValue()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaObject.SetValueByteArray">
            <summary>Sets the shim of FacebookMediaObject.SetValue(Byte[] value)</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookMediaObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaObject.AllInstances.ContentTypeGet">
            <summary>Sets the shim of FacebookMediaObject.get_ContentType()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaObject.AllInstances.ContentTypeSetString">
            <summary>Sets the shim of FacebookMediaObject.set_ContentType(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaObject.AllInstances.FileNameGet">
            <summary>Sets the shim of FacebookMediaObject.get_FileName()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaObject.AllInstances.FileNameSetString">
            <summary>Sets the shim of FacebookMediaObject.set_FileName(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaObject.AllInstances.GetValue">
            <summary>Sets the shim of FacebookMediaObject.GetValue()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaObject.AllInstances.SetValueByteArray">
            <summary>Sets the shim of FacebookMediaObject.SetValue(Byte[] value)</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookMediaStream">
            <summary>Shim type of Facebook.FacebookMediaStream</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookMediaStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookMediaStream.#ctor(Facebook.FacebookMediaStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookMediaStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookMediaStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookMediaStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaStream.Constructor">
            <summary>Sets the shim of FacebookMediaStream.FacebookMediaStream()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaStream.ContentTypeGet">
            <summary>Sets the shim of FacebookMediaStream.get_ContentType()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaStream.ContentTypeSetString">
            <summary>Sets the shim of FacebookMediaStream.set_ContentType(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaStream.Dispose">
            <summary>Sets the shim of FacebookMediaStream.Dispose()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaStream.FileNameGet">
            <summary>Sets the shim of FacebookMediaStream.get_FileName()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaStream.FileNameSetString">
            <summary>Sets the shim of FacebookMediaStream.set_FileName(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaStream.GetValue">
            <summary>Sets the shim of FacebookMediaStream.GetValue()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaStream.SetValueStream">
            <summary>Sets the shim of FacebookMediaStream.SetValue(Stream value)</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookMediaStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaStream.AllInstances.ContentTypeGet">
            <summary>Sets the shim of FacebookMediaStream.get_ContentType()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaStream.AllInstances.ContentTypeSetString">
            <summary>Sets the shim of FacebookMediaStream.set_ContentType(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaStream.AllInstances.Dispose">
            <summary>Sets the shim of FacebookMediaStream.Dispose()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaStream.AllInstances.FileNameGet">
            <summary>Sets the shim of FacebookMediaStream.get_FileName()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaStream.AllInstances.FileNameSetString">
            <summary>Sets the shim of FacebookMediaStream.set_FileName(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaStream.AllInstances.GetValue">
            <summary>Sets the shim of FacebookMediaStream.GetValue()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookMediaStream.AllInstances.SetValueStream">
            <summary>Sets the shim of FacebookMediaStream.SetValue(Stream value)</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookOAuthException">
            <summary>Shim type of Facebook.FacebookOAuthException</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookOAuthException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookOAuthException.#ctor(Facebook.FacebookOAuthException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookOAuthException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookOAuthException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookOAuthException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthException.Constructor">
            <summary>Sets the shim of FacebookOAuthException.FacebookOAuthException()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of FacebookOAuthException.FacebookOAuthException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthException.ConstructorString">
            <summary>Sets the shim of FacebookOAuthException.FacebookOAuthException(String message)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthException.ConstructorStringException">
            <summary>Sets the shim of FacebookOAuthException.FacebookOAuthException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthException.ConstructorStringString">
            <summary>Sets the shim of FacebookOAuthException.FacebookOAuthException(String message, String errorType)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthException.ConstructorStringStringInt32">
            <summary>Sets the shim of FacebookOAuthException.FacebookOAuthException(String message, String errorType, Int32 errorCode)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthException.ConstructorStringStringInt32Int32">
            <summary>Sets the shim of FacebookOAuthException.FacebookOAuthException(String message, String errorType, Int32 errorCode, Int32 errorSubcode)</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookOAuthException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookOAuthResult">
            <summary>Shim type of Facebook.FacebookOAuthResult</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookOAuthResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookOAuthResult.#ctor(Facebook.FacebookOAuthResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookOAuthResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookOAuthResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.AccessTokenGet">
            <summary>Sets the shim of FacebookOAuthResult.get_AccessToken()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.CodeGet">
            <summary>Sets the shim of FacebookOAuthResult.get_Code()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.Constructor">
            <summary>Sets the shim of FacebookOAuthResult.FacebookOAuthResult()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.ConstructorIDictionaryOfStringObject">
            <summary>Sets the shim of FacebookOAuthResult.FacebookOAuthResult(IDictionary`2&lt;String,Object&gt; parameters)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.ErrorDescriptionGet">
            <summary>Sets the shim of FacebookOAuthResult.get_ErrorDescription()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.ErrorGet">
            <summary>Sets the shim of FacebookOAuthResult.get_Error()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.ErrorReasonGet">
            <summary>Sets the shim of FacebookOAuthResult.get_ErrorReason()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.ExpiresGet">
            <summary>Sets the shim of FacebookOAuthResult.get_Expires()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.IsSuccessGet">
            <summary>Sets the shim of FacebookOAuthResult.get_IsSuccess()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.StateGet">
            <summary>Sets the shim of FacebookOAuthResult.get_State()</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookOAuthResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.AllInstances.AccessTokenGet">
            <summary>Sets the shim of FacebookOAuthResult.get_AccessToken()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.AllInstances.CodeGet">
            <summary>Sets the shim of FacebookOAuthResult.get_Code()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.AllInstances.ErrorDescriptionGet">
            <summary>Sets the shim of FacebookOAuthResult.get_ErrorDescription()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.AllInstances.ErrorGet">
            <summary>Sets the shim of FacebookOAuthResult.get_Error()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.AllInstances.ErrorReasonGet">
            <summary>Sets the shim of FacebookOAuthResult.get_ErrorReason()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.AllInstances.ExpiresGet">
            <summary>Sets the shim of FacebookOAuthResult.get_Expires()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.AllInstances.IsSuccessGet">
            <summary>Sets the shim of FacebookOAuthResult.get_IsSuccess()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookOAuthResult.AllInstances.StateGet">
            <summary>Sets the shim of FacebookOAuthResult.get_State()</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookUploadProgressChangedEventArgs">
            <summary>Shim type of Facebook.FacebookUploadProgressChangedEventArgs</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookUploadProgressChangedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookUploadProgressChangedEventArgs.#ctor(Facebook.FacebookUploadProgressChangedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookUploadProgressChangedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimFacebookUploadProgressChangedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookUploadProgressChangedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookUploadProgressChangedEventArgs.BytesReceivedGet">
            <summary>Sets the shim of FacebookUploadProgressChangedEventArgs.get_BytesReceived()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookUploadProgressChangedEventArgs.BytesSentGet">
            <summary>Sets the shim of FacebookUploadProgressChangedEventArgs.get_BytesSent()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookUploadProgressChangedEventArgs.ConstructorInt64Int64Int64Int64Int32Object">
            <summary>Sets the shim of FacebookUploadProgressChangedEventArgs.FacebookUploadProgressChangedEventArgs(Int64 bytesReceived, Int64 totalBytesToReceive, Int64 bytesSent, Int64 totalBytesToSend, Int32 progressPercentage, Object userToken)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookUploadProgressChangedEventArgs.TotalBytesToReceiveGet">
            <summary>Sets the shim of FacebookUploadProgressChangedEventArgs.get_TotalBytesToReceive()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookUploadProgressChangedEventArgs.TotalBytesToSendGet">
            <summary>Sets the shim of FacebookUploadProgressChangedEventArgs.get_TotalBytesToSend()</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimFacebookUploadProgressChangedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookUploadProgressChangedEventArgs.AllInstances.BytesReceivedGet">
            <summary>Sets the shim of FacebookUploadProgressChangedEventArgs.get_BytesReceived()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookUploadProgressChangedEventArgs.AllInstances.BytesSentGet">
            <summary>Sets the shim of FacebookUploadProgressChangedEventArgs.get_BytesSent()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookUploadProgressChangedEventArgs.AllInstances.TotalBytesToReceiveGet">
            <summary>Sets the shim of FacebookUploadProgressChangedEventArgs.get_TotalBytesToReceive()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimFacebookUploadProgressChangedEventArgs.AllInstances.TotalBytesToSendGet">
            <summary>Sets the shim of FacebookUploadProgressChangedEventArgs.get_TotalBytesToSend()</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimHttpWebRequestWrapper">
            <summary>Shim type of Facebook.HttpWebRequestWrapper</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimHttpWebRequestWrapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimHttpWebRequestWrapper.#ctor(Facebook.HttpWebRequestWrapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimHttpWebRequestWrapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimHttpWebRequestWrapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.Abort">
            <summary>Sets the shim of HttpWebRequestWrapper.Abort()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AcceptGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_Accept()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AcceptSetString">
            <summary>Sets the shim of HttpWebRequestWrapper.set_Accept(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllowAutoRedirectGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_AllowAutoRedirect()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllowAutoRedirectSetBoolean">
            <summary>Sets the shim of HttpWebRequestWrapper.set_AllowAutoRedirect(Boolean value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllowWriteStreamBufferingGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_AllowWriteStreamBuffering()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllowWriteStreamBufferingSetBoolean">
            <summary>Sets the shim of HttpWebRequestWrapper.set_AllowWriteStreamBuffering(Boolean value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AutomaticDecompressionGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_AutomaticDecompression()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AutomaticDecompressionSetDecompressionMethods">
            <summary>Sets the shim of HttpWebRequestWrapper.set_AutomaticDecompression(DecompressionMethods value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.BeginGetRequestStreamAsyncCallbackObject">
            <summary>Sets the shim of HttpWebRequestWrapper.BeginGetRequestStream(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.BeginGetResponseAsyncCallbackObject">
            <summary>Sets the shim of HttpWebRequestWrapper.BeginGetResponse(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.ConnectionGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_Connection()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.ConnectionSetString">
            <summary>Sets the shim of HttpWebRequestWrapper.set_Connection(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.Constructor">
            <summary>Sets the shim of HttpWebRequestWrapper.HttpWebRequestWrapper()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.ConstructorHttpWebRequest">
            <summary>Sets the shim of HttpWebRequestWrapper.HttpWebRequestWrapper(HttpWebRequest httpWebRequest)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.ContentLengthGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_ContentLength()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.ContentLengthSetInt64">
            <summary>Sets the shim of HttpWebRequestWrapper.set_ContentLength(Int64 value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.ContentTypeGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_ContentType()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.ContentTypeSetString">
            <summary>Sets the shim of HttpWebRequestWrapper.set_ContentType(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.CookieContainerGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_CookieContainer()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.CookieContainerSetCookieContainer">
            <summary>Sets the shim of HttpWebRequestWrapper.set_CookieContainer(CookieContainer value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.CredentialsGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_Credentials()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.CredentialsSetICredentials">
            <summary>Sets the shim of HttpWebRequestWrapper.set_Credentials(ICredentials value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.EndGetRequestStreamIAsyncResult">
            <summary>Sets the shim of HttpWebRequestWrapper.EndGetRequestStream(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.EndGetResponseIAsyncResult">
            <summary>Sets the shim of HttpWebRequestWrapper.EndGetResponse(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.ExpectGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_Expect()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.ExpectSetString">
            <summary>Sets the shim of HttpWebRequestWrapper.set_Expect(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.GetRequestStream">
            <summary>Sets the shim of HttpWebRequestWrapper.GetRequestStream()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.GetRequestStreamAsync">
            <summary>Sets the shim of HttpWebRequestWrapper.GetRequestStreamAsync()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.GetResponse">
            <summary>Sets the shim of HttpWebRequestWrapper.GetResponse()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.GetResponseAsync">
            <summary>Sets the shim of HttpWebRequestWrapper.GetResponseAsync()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.HeadersGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_Headers()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.HeadersSetWebHeaderCollection">
            <summary>Sets the shim of HttpWebRequestWrapper.set_Headers(WebHeaderCollection value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.IfModifiedSinceGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_IfModifiedSince()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.IfModifiedSinceSetDateTime">
            <summary>Sets the shim of HttpWebRequestWrapper.set_IfModifiedSince(DateTime value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.IsCancelledGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_IsCancelled()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.IsCancelledSetBoolean">
            <summary>Sets the shim of HttpWebRequestWrapper.set_IsCancelled(Boolean value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.MethodGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_Method()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.MethodSetString">
            <summary>Sets the shim of HttpWebRequestWrapper.set_Method(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.ProxyGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_Proxy()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.ProxySetIWebProxy">
            <summary>Sets the shim of HttpWebRequestWrapper.set_Proxy(IWebProxy value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.ReadWriteTimeoutGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_ReadWriteTimeout()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.ReadWriteTimeoutSetInt32">
            <summary>Sets the shim of HttpWebRequestWrapper.set_ReadWriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.RefererGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_Referer()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.RefererSetString">
            <summary>Sets the shim of HttpWebRequestWrapper.set_Referer(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.RequestUriGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_RequestUri()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.ServicePointGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_ServicePoint()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.TimeoutGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_Timeout()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.TimeoutSetInt32">
            <summary>Sets the shim of HttpWebRequestWrapper.set_Timeout(Int32 value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.TransferEncodingGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_TransferEncoding()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.TransferEncodingSetString">
            <summary>Sets the shim of HttpWebRequestWrapper.set_TransferEncoding(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.TrySetContentLengthInt64">
            <summary>Sets the shim of HttpWebRequestWrapper.TrySetContentLength(Int64 contentLength)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.TrySetUserAgentString">
            <summary>Sets the shim of HttpWebRequestWrapper.TrySetUserAgent(String userAgent)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.UserAgentGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_UserAgent()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.UserAgentSetString">
            <summary>Sets the shim of HttpWebRequestWrapper.set_UserAgent(String value)</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.Abort">
            <summary>Sets the shim of HttpWebRequestWrapper.Abort()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.AcceptGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_Accept()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.AcceptSetString">
            <summary>Sets the shim of HttpWebRequestWrapper.set_Accept(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.AllowAutoRedirectGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_AllowAutoRedirect()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.AllowAutoRedirectSetBoolean">
            <summary>Sets the shim of HttpWebRequestWrapper.set_AllowAutoRedirect(Boolean value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.AllowWriteStreamBufferingGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_AllowWriteStreamBuffering()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.AllowWriteStreamBufferingSetBoolean">
            <summary>Sets the shim of HttpWebRequestWrapper.set_AllowWriteStreamBuffering(Boolean value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.AutomaticDecompressionGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_AutomaticDecompression()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.AutomaticDecompressionSetDecompressionMethods">
            <summary>Sets the shim of HttpWebRequestWrapper.set_AutomaticDecompression(DecompressionMethods value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.BeginGetRequestStreamAsyncCallbackObject">
            <summary>Sets the shim of HttpWebRequestWrapper.BeginGetRequestStream(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.BeginGetResponseAsyncCallbackObject">
            <summary>Sets the shim of HttpWebRequestWrapper.BeginGetResponse(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.ConnectionGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_Connection()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.ConnectionSetString">
            <summary>Sets the shim of HttpWebRequestWrapper.set_Connection(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.ContentLengthGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_ContentLength()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.ContentLengthSetInt64">
            <summary>Sets the shim of HttpWebRequestWrapper.set_ContentLength(Int64 value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.ContentTypeGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_ContentType()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.ContentTypeSetString">
            <summary>Sets the shim of HttpWebRequestWrapper.set_ContentType(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.CookieContainerGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_CookieContainer()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.CookieContainerSetCookieContainer">
            <summary>Sets the shim of HttpWebRequestWrapper.set_CookieContainer(CookieContainer value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.CredentialsGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_Credentials()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.CredentialsSetICredentials">
            <summary>Sets the shim of HttpWebRequestWrapper.set_Credentials(ICredentials value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.EndGetRequestStreamIAsyncResult">
            <summary>Sets the shim of HttpWebRequestWrapper.EndGetRequestStream(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.EndGetResponseIAsyncResult">
            <summary>Sets the shim of HttpWebRequestWrapper.EndGetResponse(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.ExpectGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_Expect()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.ExpectSetString">
            <summary>Sets the shim of HttpWebRequestWrapper.set_Expect(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.GetRequestStream">
            <summary>Sets the shim of HttpWebRequestWrapper.GetRequestStream()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.GetRequestStreamAsync">
            <summary>Sets the shim of HttpWebRequestWrapper.GetRequestStreamAsync()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.GetResponse">
            <summary>Sets the shim of HttpWebRequestWrapper.GetResponse()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.GetResponseAsync">
            <summary>Sets the shim of HttpWebRequestWrapper.GetResponseAsync()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.HeadersGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_Headers()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.HeadersSetWebHeaderCollection">
            <summary>Sets the shim of HttpWebRequestWrapper.set_Headers(WebHeaderCollection value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.IfModifiedSinceGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_IfModifiedSince()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.IfModifiedSinceSetDateTime">
            <summary>Sets the shim of HttpWebRequestWrapper.set_IfModifiedSince(DateTime value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.IsCancelledGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_IsCancelled()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.IsCancelledSetBoolean">
            <summary>Sets the shim of HttpWebRequestWrapper.set_IsCancelled(Boolean value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.MethodGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_Method()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.MethodSetString">
            <summary>Sets the shim of HttpWebRequestWrapper.set_Method(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.ProxyGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_Proxy()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.ProxySetIWebProxy">
            <summary>Sets the shim of HttpWebRequestWrapper.set_Proxy(IWebProxy value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.ReadWriteTimeoutGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_ReadWriteTimeout()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.ReadWriteTimeoutSetInt32">
            <summary>Sets the shim of HttpWebRequestWrapper.set_ReadWriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.RefererGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_Referer()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.RefererSetString">
            <summary>Sets the shim of HttpWebRequestWrapper.set_Referer(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.RequestUriGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_RequestUri()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.ServicePointGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_ServicePoint()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.TimeoutGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_Timeout()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.TimeoutSetInt32">
            <summary>Sets the shim of HttpWebRequestWrapper.set_Timeout(Int32 value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.TransferEncodingGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_TransferEncoding()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.TransferEncodingSetString">
            <summary>Sets the shim of HttpWebRequestWrapper.set_TransferEncoding(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.TrySetContentLengthInt64">
            <summary>Sets the shim of HttpWebRequestWrapper.TrySetContentLength(Int64 contentLength)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.TrySetUserAgentString">
            <summary>Sets the shim of HttpWebRequestWrapper.TrySetUserAgent(String userAgent)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.UserAgentGet">
            <summary>Sets the shim of HttpWebRequestWrapper.get_UserAgent()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebRequestWrapper.AllInstances.UserAgentSetString">
            <summary>Sets the shim of HttpWebRequestWrapper.set_UserAgent(String value)</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimHttpWebResponseWrapper">
            <summary>Shim type of Facebook.HttpWebResponseWrapper</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimHttpWebResponseWrapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimHttpWebResponseWrapper.#ctor(Facebook.HttpWebResponseWrapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimHttpWebResponseWrapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimHttpWebResponseWrapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.CharacterSetGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_CharacterSet()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.Constructor">
            <summary>Sets the shim of HttpWebResponseWrapper.HttpWebResponseWrapper()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.ConstructorHttpWebResponse">
            <summary>Sets the shim of HttpWebResponseWrapper.HttpWebResponseWrapper(HttpWebResponse httpWebResponse)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.ContentEncodingGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_ContentEncoding()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.ContentLengthGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_ContentLength()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.ContentTypeGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_ContentType()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.CookiesGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_Cookies()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.GetResponseStream">
            <summary>Sets the shim of HttpWebResponseWrapper.GetResponseStream()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.HeadersGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_Headers()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.IsMutuallyAuthenticatedGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_IsMutuallyAuthenticated()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.LastModifiedGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_LastModified()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.MethodGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_Method()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.ProtocolVersionGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_ProtocolVersion()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.ResponseUriGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_ResponseUri()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.ServerGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_Server()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.StatusCodeGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_StatusCode()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.StatusDescriptionGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_StatusDescription()</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimHttpWebResponseWrapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.AllInstances.CharacterSetGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_CharacterSet()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.AllInstances.ContentEncodingGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_ContentEncoding()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.AllInstances.ContentLengthGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_ContentLength()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.AllInstances.ContentTypeGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_ContentType()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.AllInstances.CookiesGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_Cookies()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.AllInstances.GetResponseStream">
            <summary>Sets the shim of HttpWebResponseWrapper.GetResponseStream()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.AllInstances.HeadersGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_Headers()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.AllInstances.IsMutuallyAuthenticatedGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_IsMutuallyAuthenticated()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.AllInstances.LastModifiedGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_LastModified()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.AllInstances.MethodGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_Method()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.AllInstances.ProtocolVersionGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_ProtocolVersion()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.AllInstances.ResponseUriGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_ResponseUri()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.AllInstances.ServerGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_Server()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.AllInstances.StatusCodeGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_StatusCode()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimHttpWebResponseWrapper.AllInstances.StatusDescriptionGet">
            <summary>Sets the shim of HttpWebResponseWrapper.get_StatusDescription()</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimJsonArray">
            <summary>Shim type of Facebook.JsonArray</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonArray.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonArray.#ctor(Facebook.JsonArray)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonArray.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonArray.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonArray.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonArray.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonArray.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonArray.Bind(System.Collections.Generic.ICollection{System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonArray.Bind(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonArray.Bind(System.Collections.Generic.IList{System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonArray.Bind(System.Collections.Generic.IReadOnlyCollection{System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonArray.Bind(System.Collections.Generic.IReadOnlyList{System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonArray.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonArray.Constructor">
            <summary>Sets the shim of JsonArray.JsonArray()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonArray.ConstructorInt32">
            <summary>Sets the shim of JsonArray.JsonArray(Int32 capacity)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonArray.ToString">
            <summary>Sets the shim of JsonArray.ToString()</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimJsonArray.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonArray.AllInstances.ToString01">
            <summary>Sets the shim of JsonArray.ToString()</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimJsonObject">
            <summary>Shim type of Facebook.JsonObject</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonObject.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonObject.#ctor(Facebook.JsonObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonObject.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonObject.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonObject.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonObject.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimJsonObject.Bind(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AddKeyValuePairOfStringObject">
            <summary>Sets the shim of JsonObject.Add(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AddStringObject">
            <summary>Sets the shim of JsonObject.Add(String key, Object value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.Clear">
            <summary>Sets the shim of JsonObject.Clear()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.Constructor">
            <summary>Sets the shim of JsonObject.JsonObject()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.ContainsKeyString">
            <summary>Sets the shim of JsonObject.ContainsKey(String key)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.ContainsKeyValuePairOfStringObject">
            <summary>Sets the shim of JsonObject.Contains(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.CopyToKeyValuePairOfStringObjectArrayInt32">
            <summary>Sets the shim of JsonObject.CopyTo(KeyValuePair`2&lt;String,Object&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.CountGet">
            <summary>Sets the shim of JsonObject.get_Count()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.GetAtIndexIDictionaryOfStringObjectInt32">
            <summary>Sets the shim of JsonObject.GetAtIndex(IDictionary`2&lt;String,Object&gt; obj, Int32 index)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.GetDynamicMemberNames">
            <summary>Sets the shim of JsonObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.GetEnumerator">
            <summary>Sets the shim of JsonObject.GetEnumerator()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.IsReadOnlyGet">
            <summary>Sets the shim of JsonObject.get_IsReadOnly()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.ItemGetInt32">
            <summary>Sets the shim of JsonObject.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.ItemGetString">
            <summary>Sets the shim of JsonObject.get_Item(String key)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.ItemSetStringObject">
            <summary>Sets the shim of JsonObject.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.KeysGet">
            <summary>Sets the shim of JsonObject.get_Keys()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.RemoveKeyValuePairOfStringObject">
            <summary>Sets the shim of JsonObject.Remove(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.RemoveString">
            <summary>Sets the shim of JsonObject.Remove(String key)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of JsonObject.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.ToString">
            <summary>Sets the shim of JsonObject.ToString()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.TryConvertConvertBinderObjectOut">
            <summary>Sets the shim of JsonObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.TryDeleteMemberDeleteMemberBinder">
            <summary>Sets the shim of JsonObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.TryGetIndexGetIndexBinderObjectArrayObjectOut">
            <summary>Sets the shim of JsonObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the shim of JsonObject.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.TryGetValueStringObjectOut">
            <summary>Sets the shim of JsonObject.TryGetValue(String key, Object&amp; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.TrySetIndexSetIndexBinderObjectArrayObject">
            <summary>Sets the shim of JsonObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.TrySetMemberSetMemberBinderObject">
            <summary>Sets the shim of JsonObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.ValuesGet">
            <summary>Sets the shim of JsonObject.get_Values()</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimJsonObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.AddKeyValuePairOfStringObject">
            <summary>Sets the shim of JsonObject.Add(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.AddStringObject">
            <summary>Sets the shim of JsonObject.Add(String key, Object value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.Clear">
            <summary>Sets the shim of JsonObject.Clear()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.ContainsKeyString">
            <summary>Sets the shim of JsonObject.ContainsKey(String key)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.ContainsKeyValuePairOfStringObject">
            <summary>Sets the shim of JsonObject.Contains(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.CopyToKeyValuePairOfStringObjectArrayInt32">
            <summary>Sets the shim of JsonObject.CopyTo(KeyValuePair`2&lt;String,Object&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.CountGet">
            <summary>Sets the shim of JsonObject.get_Count()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.GetDynamicMemberNames">
            <summary>Sets the shim of JsonObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.GetEnumerator">
            <summary>Sets the shim of JsonObject.GetEnumerator()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of JsonObject.get_IsReadOnly()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.ItemGetInt32">
            <summary>Sets the shim of JsonObject.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.ItemGetString">
            <summary>Sets the shim of JsonObject.get_Item(String key)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.ItemSetStringObject">
            <summary>Sets the shim of JsonObject.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.KeysGet">
            <summary>Sets the shim of JsonObject.get_Keys()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.RemoveKeyValuePairOfStringObject">
            <summary>Sets the shim of JsonObject.Remove(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.RemoveString">
            <summary>Sets the shim of JsonObject.Remove(String key)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of JsonObject.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.ToString01">
            <summary>Sets the shim of JsonObject.ToString()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.TryConvertConvertBinderObjectOut">
            <summary>Sets the shim of JsonObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.TryDeleteMemberDeleteMemberBinder">
            <summary>Sets the shim of JsonObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.TryGetIndexGetIndexBinderObjectArrayObjectOut">
            <summary>Sets the shim of JsonObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the shim of JsonObject.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.TryGetValueStringObjectOut">
            <summary>Sets the shim of JsonObject.TryGetValue(String key, Object&amp; value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.TrySetIndexSetIndexBinderObjectArrayObject">
            <summary>Sets the shim of JsonObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.TrySetMemberSetMemberBinderObject">
            <summary>Sets the shim of JsonObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimJsonObject.AllInstances.ValuesGet">
            <summary>Sets the shim of JsonObject.get_Values()</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimWebExceptionWrapper">
            <summary>Shim type of Facebook.WebExceptionWrapper</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimWebExceptionWrapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimWebExceptionWrapper.#ctor(Facebook.WebExceptionWrapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimWebExceptionWrapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimWebExceptionWrapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Facebook.Fakes.ShimWebExceptionWrapper.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimWebExceptionWrapper.ActualWebExceptionGet">
            <summary>Sets the shim of WebExceptionWrapper.get_ActualWebException()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimWebExceptionWrapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimWebExceptionWrapper.Constructor">
            <summary>Sets the shim of WebExceptionWrapper.WebExceptionWrapper()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimWebExceptionWrapper.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of WebExceptionWrapper.WebExceptionWrapper(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimWebExceptionWrapper.ConstructorWebException">
            <summary>Sets the shim of WebExceptionWrapper.WebExceptionWrapper(WebException webException)</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimWebExceptionWrapper.GetResponse">
            <summary>Sets the shim of WebExceptionWrapper.GetResponse()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimWebExceptionWrapper.StatusGet">
            <summary>Sets the shim of WebExceptionWrapper.get_Status()</summary>
        </member>
        <member name="T:Facebook.Fakes.ShimWebExceptionWrapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimWebExceptionWrapper.AllInstances.ActualWebExceptionGet">
            <summary>Sets the shim of WebExceptionWrapper.get_ActualWebException()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimWebExceptionWrapper.AllInstances.GetResponse">
            <summary>Sets the shim of WebExceptionWrapper.GetResponse()</summary>
        </member>
        <member name="P:Facebook.Fakes.ShimWebExceptionWrapper.AllInstances.StatusGet">
            <summary>Sets the shim of WebExceptionWrapper.get_Status()</summary>
        </member>
        <member name="T:Facebook.Fakes.StubFacebookApiEventArgs">
            <summary>Stub type of Facebook.FacebookApiEventArgs</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiEventArgs.#ctor(System.Exception,System.Boolean,System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubFacebookApiEventArgs</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Facebook.Fakes.StubFacebookApiException">
            <summary>Stub type of Facebook.FacebookApiException</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiException.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiException.#ctor(System.String,System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiException.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubFacebookApiException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubFacebookApiException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiException.InitializeStub">
            <summary>Initializes a new instance of type StubFacebookApiException</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Facebook.Fakes.StubFacebookApiLimitException">
            <summary>Stub type of Facebook.FacebookApiLimitException</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiLimitException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiLimitException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiLimitException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiLimitException.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiLimitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiLimitException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubFacebookApiLimitException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiLimitException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubFacebookApiLimitException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiLimitException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiLimitException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiLimitException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiLimitException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiLimitException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiLimitException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiLimitException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiLimitException.InitializeStub">
            <summary>Initializes a new instance of type StubFacebookApiLimitException</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiLimitException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiLimitException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiLimitException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiLimitException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookApiLimitException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookApiLimitException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiLimitException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiLimitException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiLimitException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiLimitException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiLimitException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiLimitException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiLimitException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookApiLimitException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Facebook.Fakes.StubFacebookBatchParameter">
            <summary>Stub type of Facebook.FacebookBatchParameter</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookBatchParameter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookBatchParameter.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookBatchParameter.#ctor(Facebook.HttpMethod,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookBatchParameter.#ctor(System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookBatchParameter.#ctor(Facebook.HttpMethod,System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookBatchParameter.InitializeStub">
            <summary>Initializes a new instance of type StubFacebookBatchParameter</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookBatchParameter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookBatchParameter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookBatchParameter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Facebook.Fakes.StubFacebookClient">
            <summary>Stub type of Facebook.FacebookClient</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.AccessTokenGet">
            <summary>Sets the stub of FacebookClient.get_AccessToken()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.AccessTokenSetString">
            <summary>Sets the stub of FacebookClient.set_AccessToken(String value)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.Api(Facebook.HttpMethod,System.String,System.Object,System.Type)">
            <summary>Sets the stub of FacebookClient.Api(HttpMethod httpMethod, String path, Object parameters, Type resultType)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.ApiAsync(Facebook.HttpMethod,System.String,System.Object,System.Type,System.Object)">
            <summary>Sets the stub of FacebookClient.ApiAsync(HttpMethod httpMethod, String path, Object parameters, Type resultType, Object userState)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.ApiAsyncHttpMethodStringObjectTypeObject">
            <summary>Sets the stub of FacebookClient.ApiAsync(HttpMethod httpMethod, String path, Object parameters, Type resultType, Object userState)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.ApiHttpMethodStringObjectType">
            <summary>Sets the stub of FacebookClient.Api(HttpMethod httpMethod, String path, Object parameters, Type resultType)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.ApiTaskAsync(Facebook.HttpMethod,System.String,System.Object,System.Type,System.Object,System.Threading.CancellationToken)">
            <summary>Sets the stub of FacebookClient.ApiTaskAsync(HttpMethod httpMethod, String path, Object parameters, Type resultType, Object userState, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.ApiTaskAsync(Facebook.HttpMethod,System.String,System.Object,System.Type,System.Object,System.Threading.CancellationToken,System.IProgress{Facebook.FacebookUploadProgressChangedEventArgs})">
            <summary>Sets the stub of FacebookClient.ApiTaskAsync(HttpMethod httpMethod, String path, Object parameters, Type resultType, Object userState, CancellationToken cancellationToken, IProgress`1&lt;FacebookUploadProgressChangedEventArgs&gt; uploadProgress)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.ApiTaskAsyncHttpMethodStringObjectTypeObjectCancellationToken">
            <summary>Sets the stub of FacebookClient.ApiTaskAsync(HttpMethod httpMethod, String path, Object parameters, Type resultType, Object userState, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.ApiTaskAsyncHttpMethodStringObjectTypeObjectCancellationTokenIProgressOfFacebookUploadProgressChangedEventArgs">
            <summary>Sets the stub of FacebookClient.ApiTaskAsync(HttpMethod httpMethod, String path, Object parameters, Type resultType, Object userState, CancellationToken cancellationToken, IProgress`1&lt;FacebookUploadProgressChangedEventArgs&gt; uploadProgress)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.AppIdGet">
            <summary>Sets the stub of FacebookClient.get_AppId()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.AppIdSetString">
            <summary>Sets the stub of FacebookClient.set_AppId(String value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.AppSecretGet">
            <summary>Sets the stub of FacebookClient.get_AppSecret()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.AppSecretSetString">
            <summary>Sets the stub of FacebookClient.set_AppSecret(String value)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.AttachBackingFieldToAccessToken">
            <summary>Attaches delegates to emulate StubFacebookClient.AccessToken as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.AttachBackingFieldToAppId">
            <summary>Attaches delegates to emulate StubFacebookClient.AppId as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.AttachBackingFieldToAppSecret">
            <summary>Attaches delegates to emulate StubFacebookClient.AppSecret as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.AttachBackingFieldToDeserializeJson">
            <summary>Attaches delegates to emulate StubFacebookClient.DeserializeJson as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.AttachBackingFieldToHttpWebRequestFactory">
            <summary>Attaches delegates to emulate StubFacebookClient.HttpWebRequestFactory as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.AttachBackingFieldToIsSecureConnection">
            <summary>Attaches delegates to emulate StubFacebookClient.IsSecureConnection as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.AttachBackingFieldToSerializeJson">
            <summary>Attaches delegates to emulate StubFacebookClient.SerializeJson as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.AttachBackingFieldToUseFacebookBeta">
            <summary>Attaches delegates to emulate StubFacebookClient.UseFacebookBeta as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.Batch(Facebook.FacebookBatchParameter[])">
            <summary>Sets the stub of FacebookClient.Batch(FacebookBatchParameter[] batchParameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.Batch(Facebook.FacebookBatchParameter[],System.Object)">
            <summary>Sets the stub of FacebookClient.Batch(FacebookBatchParameter[] batchParameters, Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.BatchAsync(Facebook.FacebookBatchParameter[])">
            <summary>Sets the stub of FacebookClient.BatchAsync(FacebookBatchParameter[] batchParameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.BatchAsync(Facebook.FacebookBatchParameter[],System.Object)">
            <summary>Sets the stub of FacebookClient.BatchAsync(FacebookBatchParameter[] batchParameters, Object userState)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.BatchAsync(Facebook.FacebookBatchParameter[],System.Object,System.Object)">
            <summary>Sets the stub of FacebookClient.BatchAsync(FacebookBatchParameter[] batchParameters, Object userState, Object parameters)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.BatchAsyncFacebookBatchParameterArray">
            <summary>Sets the stub of FacebookClient.BatchAsync(FacebookBatchParameter[] batchParameters)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.BatchAsyncFacebookBatchParameterArrayObject">
            <summary>Sets the stub of FacebookClient.BatchAsync(FacebookBatchParameter[] batchParameters, Object userState)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.BatchAsyncFacebookBatchParameterArrayObjectObject">
            <summary>Sets the stub of FacebookClient.BatchAsync(FacebookBatchParameter[] batchParameters, Object userState, Object parameters)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.BatchFacebookBatchParameterArray">
            <summary>Sets the stub of FacebookClient.Batch(FacebookBatchParameter[] batchParameters)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.BatchFacebookBatchParameterArrayObject">
            <summary>Sets the stub of FacebookClient.Batch(FacebookBatchParameter[] batchParameters, Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.BatchTaskAsync(Facebook.FacebookBatchParameter[])">
            <summary>Sets the stub of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.BatchTaskAsync(Facebook.FacebookBatchParameter[],System.Object,System.Threading.CancellationToken)">
            <summary>Sets the stub of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters, Object userToken, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.BatchTaskAsync(Facebook.FacebookBatchParameter[],System.Object,System.Object,System.Threading.CancellationToken)">
            <summary>Sets the stub of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters, Object userToken, Object parameters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.BatchTaskAsync(Facebook.FacebookBatchParameter[],System.Object,System.Threading.CancellationToken,System.IProgress{Facebook.FacebookUploadProgressChangedEventArgs})">
            <summary>Sets the stub of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters, Object userState, CancellationToken cancellationToken, IProgress`1&lt;FacebookUploadProgressChangedEventArgs&gt; uploadProgress)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.BatchTaskAsync(Facebook.FacebookBatchParameter[],System.Object,System.Object,System.Threading.CancellationToken,System.IProgress{Facebook.FacebookUploadProgressChangedEventArgs})">
            <summary>Sets the stub of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters, Object userState, Object parameters, CancellationToken cancellationToken, IProgress`1&lt;FacebookUploadProgressChangedEventArgs&gt; uploadProgress)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.BatchTaskAsyncFacebookBatchParameterArray">
            <summary>Sets the stub of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.BatchTaskAsyncFacebookBatchParameterArrayObjectCancellationToken">
            <summary>Sets the stub of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters, Object userToken, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.BatchTaskAsyncFacebookBatchParameterArrayObjectCancellationTokenIProgressOfFacebookUploadProgressChangedEventArgs">
            <summary>Sets the stub of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters, Object userState, CancellationToken cancellationToken, IProgress`1&lt;FacebookUploadProgressChangedEventArgs&gt; uploadProgress)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.BatchTaskAsyncFacebookBatchParameterArrayObjectObjectCancellationToken">
            <summary>Sets the stub of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters, Object userToken, Object parameters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.BatchTaskAsyncFacebookBatchParameterArrayObjectObjectCancellationTokenIProgressOfFacebookUploadProgressChangedEventArgs">
            <summary>Sets the stub of FacebookClient.BatchTaskAsync(FacebookBatchParameter[] batchParameters, Object userState, Object parameters, CancellationToken cancellationToken, IProgress`1&lt;FacebookUploadProgressChangedEventArgs&gt; uploadProgress)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.CancelAsync">
            <summary>Sets the stub of FacebookClient.CancelAsync()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.CancelAsync01">
            <summary>Sets the stub of FacebookClient.CancelAsync()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.Delete(System.String)">
            <summary>Sets the stub of FacebookClient.Delete(String path)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.Delete(System.String,System.Object)">
            <summary>Sets the stub of FacebookClient.Delete(String path, Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.DeleteAsync(System.String)">
            <summary>Sets the stub of FacebookClient.DeleteAsync(String path)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.DeleteAsync(System.String,System.Object,System.Object)">
            <summary>Sets the stub of FacebookClient.DeleteAsync(String path, Object parameters, Object userState)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.DeleteAsyncString">
            <summary>Sets the stub of FacebookClient.DeleteAsync(String path)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.DeleteAsyncStringObjectObject">
            <summary>Sets the stub of FacebookClient.DeleteAsync(String path, Object parameters, Object userState)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.DeleteString">
            <summary>Sets the stub of FacebookClient.Delete(String path)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.DeleteStringObject">
            <summary>Sets the stub of FacebookClient.Delete(String path, Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.DeleteTaskAsync(System.String)">
            <summary>Sets the stub of FacebookClient.DeleteTaskAsync(String path)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.DeleteTaskAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>Sets the stub of FacebookClient.DeleteTaskAsync(String path, Object parameters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.DeleteTaskAsyncString">
            <summary>Sets the stub of FacebookClient.DeleteTaskAsync(String path)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.DeleteTaskAsyncStringObjectCancellationToken">
            <summary>Sets the stub of FacebookClient.DeleteTaskAsync(String path, Object parameters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.DeserializeJsonGet">
            <summary>Sets the stub of FacebookClient.get_DeserializeJson()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.DeserializeJsonSetFuncOfStringTypeObject">
            <summary>Sets the stub of FacebookClient.set_DeserializeJson(Func`3&lt;String,Type,Object&gt; value)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.Get(System.Object)">
            <summary>Sets the stub of FacebookClient.Get(Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.Get(System.String)">
            <summary>Sets the stub of FacebookClient.Get(String path)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.Get(System.String,System.Object)">
            <summary>Sets the stub of FacebookClient.Get(String path, Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.GetAsync(System.Object)">
            <summary>Sets the stub of FacebookClient.GetAsync(Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.GetAsync(System.String)">
            <summary>Sets the stub of FacebookClient.GetAsync(String path)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.GetAsync(System.String,System.Object)">
            <summary>Sets the stub of FacebookClient.GetAsync(String path, Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.GetAsync(System.String,System.Object,System.Object)">
            <summary>Sets the stub of FacebookClient.GetAsync(String path, Object parameters, Object userState)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.GetAsyncObject">
            <summary>Sets the stub of FacebookClient.GetAsync(Object parameters)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.GetAsyncString">
            <summary>Sets the stub of FacebookClient.GetAsync(String path)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.GetAsyncStringObject">
            <summary>Sets the stub of FacebookClient.GetAsync(String path, Object parameters)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.GetAsyncStringObjectObject">
            <summary>Sets the stub of FacebookClient.GetAsync(String path, Object parameters, Object userState)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.GetLoginUrl(System.Object)">
            <summary>Sets the stub of FacebookClient.GetLoginUrl(Object parameters)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.GetLoginUrlObject">
            <summary>Sets the stub of FacebookClient.GetLoginUrl(Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.GetLogoutUrl(System.Object)">
            <summary>Sets the stub of FacebookClient.GetLogoutUrl(Object parameters)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.GetLogoutUrlObject">
            <summary>Sets the stub of FacebookClient.GetLogoutUrl(Object parameters)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.GetObject">
            <summary>Sets the stub of FacebookClient.Get(Object parameters)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.GetString">
            <summary>Sets the stub of FacebookClient.Get(String path)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.GetStringObject">
            <summary>Sets the stub of FacebookClient.Get(String path, Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.GetTaskAsync(System.Object)">
            <summary>Sets the stub of FacebookClient.GetTaskAsync(Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.GetTaskAsync(System.String)">
            <summary>Sets the stub of FacebookClient.GetTaskAsync(String path)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.GetTaskAsync(System.String,System.Object)">
            <summary>Sets the stub of FacebookClient.GetTaskAsync(String path, Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.GetTaskAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>Sets the stub of FacebookClient.GetTaskAsync(String path, Object parameters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.GetTaskAsyncObject">
            <summary>Sets the stub of FacebookClient.GetTaskAsync(Object parameters)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.GetTaskAsyncString">
            <summary>Sets the stub of FacebookClient.GetTaskAsync(String path)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.GetTaskAsyncStringObject">
            <summary>Sets the stub of FacebookClient.GetTaskAsync(String path, Object parameters)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.GetTaskAsyncStringObjectCancellationToken">
            <summary>Sets the stub of FacebookClient.GetTaskAsync(String path, Object parameters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.HttpWebRequestFactoryGet">
            <summary>Sets the stub of FacebookClient.get_HttpWebRequestFactory()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.HttpWebRequestFactorySetFuncOfUriHttpWebRequestWrapper">
            <summary>Sets the stub of FacebookClient.set_HttpWebRequestFactory(Func`2&lt;Uri,HttpWebRequestWrapper&gt; value)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.InitializeStub">
            <summary>Initializes a new instance of type StubFacebookClient</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.IsSecureConnectionGet">
            <summary>Sets the stub of FacebookClient.get_IsSecureConnection()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.IsSecureConnectionSetBoolean">
            <summary>Sets the stub of FacebookClient.set_IsSecureConnection(Boolean value)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.OnDeleteCompleted(Facebook.FacebookApiEventArgs)">
            <summary>Sets the stub of FacebookClient.OnDeleteCompleted(FacebookApiEventArgs args)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.OnDeleteCompletedFacebookApiEventArgs">
            <summary>Sets the stub of FacebookClient.OnDeleteCompleted(FacebookApiEventArgs args)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.OnGetCompleted(Facebook.FacebookApiEventArgs)">
            <summary>Sets the stub of FacebookClient.OnGetCompleted(FacebookApiEventArgs args)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.OnGetCompletedFacebookApiEventArgs">
            <summary>Sets the stub of FacebookClient.OnGetCompleted(FacebookApiEventArgs args)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.OnPostCompleted(Facebook.FacebookApiEventArgs)">
            <summary>Sets the stub of FacebookClient.OnPostCompleted(FacebookApiEventArgs args)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.OnPostCompletedFacebookApiEventArgs">
            <summary>Sets the stub of FacebookClient.OnPostCompleted(FacebookApiEventArgs args)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.ParseOAuthCallbackUrl(System.Uri)">
            <summary>Sets the stub of FacebookClient.ParseOAuthCallbackUrl(Uri uri)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.ParseOAuthCallbackUrlUri">
            <summary>Sets the stub of FacebookClient.ParseOAuthCallbackUrl(Uri uri)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.ParseSignedRequest(System.String)">
            <summary>Sets the stub of FacebookClient.ParseSignedRequest(String signedRequestValue)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.ParseSignedRequest(System.String,System.String)">
            <summary>Sets the stub of FacebookClient.ParseSignedRequest(String appSecret, String signedRequestValue)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.ParseSignedRequestString">
            <summary>Sets the stub of FacebookClient.ParseSignedRequest(String signedRequestValue)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.ParseSignedRequestStringString">
            <summary>Sets the stub of FacebookClient.ParseSignedRequest(String appSecret, String signedRequestValue)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.Post(System.Object)">
            <summary>Sets the stub of FacebookClient.Post(Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.Post(System.String,System.Object)">
            <summary>Sets the stub of FacebookClient.Post(String path, Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.PostAsync(System.Object)">
            <summary>Sets the stub of FacebookClient.PostAsync(Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.PostAsync(System.String,System.Object)">
            <summary>Sets the stub of FacebookClient.PostAsync(String path, Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.PostAsync(System.String,System.Object,System.Object)">
            <summary>Sets the stub of FacebookClient.PostAsync(String path, Object parameters, Object userState)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.PostAsyncObject">
            <summary>Sets the stub of FacebookClient.PostAsync(Object parameters)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.PostAsyncStringObject">
            <summary>Sets the stub of FacebookClient.PostAsync(String path, Object parameters)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.PostAsyncStringObjectObject">
            <summary>Sets the stub of FacebookClient.PostAsync(String path, Object parameters, Object userState)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.PostObject">
            <summary>Sets the stub of FacebookClient.Post(Object parameters)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.PostStringObject">
            <summary>Sets the stub of FacebookClient.Post(String path, Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.PostTaskAsync(System.Object)">
            <summary>Sets the stub of FacebookClient.PostTaskAsync(Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.PostTaskAsync(System.String,System.Object)">
            <summary>Sets the stub of FacebookClient.PostTaskAsync(String path, Object parameters)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.PostTaskAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>Sets the stub of FacebookClient.PostTaskAsync(String path, Object parameters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.PostTaskAsync(System.String,System.Object,System.Object,System.Threading.CancellationToken)">
            <summary>Sets the stub of FacebookClient.PostTaskAsync(String path, Object parameters, Object userState, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.PostTaskAsync(System.String,System.Object,System.Object,System.Threading.CancellationToken,System.IProgress{Facebook.FacebookUploadProgressChangedEventArgs})">
            <summary>Sets the stub of FacebookClient.PostTaskAsync(String path, Object parameters, Object userState, CancellationToken cancellationToken, IProgress`1&lt;FacebookUploadProgressChangedEventArgs&gt; uploadProgress)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.PostTaskAsyncObject">
            <summary>Sets the stub of FacebookClient.PostTaskAsync(Object parameters)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.PostTaskAsyncStringObject">
            <summary>Sets the stub of FacebookClient.PostTaskAsync(String path, Object parameters)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.PostTaskAsyncStringObjectCancellationToken">
            <summary>Sets the stub of FacebookClient.PostTaskAsync(String path, Object parameters, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.PostTaskAsyncStringObjectObjectCancellationToken">
            <summary>Sets the stub of FacebookClient.PostTaskAsync(String path, Object parameters, Object userState, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.PostTaskAsyncStringObjectObjectCancellationTokenIProgressOfFacebookUploadProgressChangedEventArgs">
            <summary>Sets the stub of FacebookClient.PostTaskAsync(String path, Object parameters, Object userState, CancellationToken cancellationToken, IProgress`1&lt;FacebookUploadProgressChangedEventArgs&gt; uploadProgress)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.SerializeJsonGet">
            <summary>Sets the stub of FacebookClient.get_SerializeJson()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.SerializeJsonSetFuncOfObjectString">
            <summary>Sets the stub of FacebookClient.set_SerializeJson(Func`2&lt;Object,String&gt; value)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.TryParseOAuthCallbackUrl(System.Uri,Facebook.FacebookOAuthResult@)">
            <summary>Sets the stub of FacebookClient.TryParseOAuthCallbackUrl(Uri url, FacebookOAuthResult&amp; facebookOAuthResult)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.TryParseOAuthCallbackUrlUriFacebookOAuthResultOut">
            <summary>Sets the stub of FacebookClient.TryParseOAuthCallbackUrl(Uri url, FacebookOAuthResult&amp; facebookOAuthResult)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.TryParseSignedRequest(System.String,System.Object@)">
            <summary>Sets the stub of FacebookClient.TryParseSignedRequest(String signedRequestValue, Object&amp; signedRequest)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookClient.TryParseSignedRequest(System.String,System.String,System.Object@)">
            <summary>Sets the stub of FacebookClient.TryParseSignedRequest(String appSecret, String signedRequestValue, Object&amp; signedRequest)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.TryParseSignedRequestStringObjectOut">
            <summary>Sets the stub of FacebookClient.TryParseSignedRequest(String signedRequestValue, Object&amp; signedRequest)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.TryParseSignedRequestStringStringObjectOut">
            <summary>Sets the stub of FacebookClient.TryParseSignedRequest(String appSecret, String signedRequestValue, Object&amp; signedRequest)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.UseFacebookBetaGet">
            <summary>Sets the stub of FacebookClient.get_UseFacebookBeta()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookClient.UseFacebookBetaSetBoolean">
            <summary>Sets the stub of FacebookClient.set_UseFacebookBeta(Boolean value)</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookClient.AccessToken">
            <summary>Sets the stub of FacebookClient.get_AccessToken()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookClient.AppId">
            <summary>Sets the stub of FacebookClient.get_AppId()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookClient.AppSecret">
            <summary>Sets the stub of FacebookClient.get_AppSecret()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookClient.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookClient.DeserializeJson">
            <summary>Sets the stub of FacebookClient.get_DeserializeJson()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookClient.HttpWebRequestFactory">
            <summary>Sets the stub of FacebookClient.get_HttpWebRequestFactory()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookClient.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookClient.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookClient.IsSecureConnection">
            <summary>Sets the stub of FacebookClient.get_IsSecureConnection()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookClient.SerializeJson">
            <summary>Sets the stub of FacebookClient.get_SerializeJson()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookClient.UseFacebookBeta">
            <summary>Sets the stub of FacebookClient.get_UseFacebookBeta()</summary>
        </member>
        <member name="T:Facebook.Fakes.StubFacebookMediaObject">
            <summary>Stub type of Facebook.FacebookMediaObject</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookMediaObject.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookMediaObject.InitializeStub">
            <summary>Initializes a new instance of type StubFacebookMediaObject</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookMediaObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookMediaObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookMediaObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Facebook.Fakes.StubFacebookMediaStream">
            <summary>Stub type of Facebook.FacebookMediaStream</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookMediaStream.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookMediaStream.InitializeStub">
            <summary>Initializes a new instance of type StubFacebookMediaStream</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookMediaStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookMediaStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookMediaStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Facebook.Fakes.StubFacebookOAuthException">
            <summary>Stub type of Facebook.FacebookOAuthException</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookOAuthException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookOAuthException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookOAuthException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookOAuthException.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookOAuthException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookOAuthException.#ctor(System.String,System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookOAuthException.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookOAuthException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubFacebookOAuthException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookOAuthException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubFacebookOAuthException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookOAuthException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookOAuthException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookOAuthException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookOAuthException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookOAuthException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookOAuthException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookOAuthException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookOAuthException.InitializeStub">
            <summary>Initializes a new instance of type StubFacebookOAuthException</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookOAuthException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookOAuthException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookOAuthException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookOAuthException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookOAuthException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookOAuthException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Facebook.Fakes.StubFacebookOAuthResult">
            <summary>Stub type of Facebook.FacebookOAuthResult</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookOAuthResult.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookOAuthResult.AccessTokenGet">
            <summary>Sets the stub of FacebookOAuthResult.get_AccessToken()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookOAuthResult.CodeGet">
            <summary>Sets the stub of FacebookOAuthResult.get_Code()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookOAuthResult.ErrorDescriptionGet">
            <summary>Sets the stub of FacebookOAuthResult.get_ErrorDescription()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookOAuthResult.ErrorGet">
            <summary>Sets the stub of FacebookOAuthResult.get_Error()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookOAuthResult.ErrorReasonGet">
            <summary>Sets the stub of FacebookOAuthResult.get_ErrorReason()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookOAuthResult.ExpiresGet">
            <summary>Sets the stub of FacebookOAuthResult.get_Expires()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookOAuthResult.InitializeStub">
            <summary>Initializes a new instance of type StubFacebookOAuthResult</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookOAuthResult.IsSuccessGet">
            <summary>Sets the stub of FacebookOAuthResult.get_IsSuccess()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubFacebookOAuthResult.StateGet">
            <summary>Sets the stub of FacebookOAuthResult.get_State()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthResult.AccessToken">
            <summary>Sets the stub of FacebookOAuthResult.get_AccessToken()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthResult.Code">
            <summary>Sets the stub of FacebookOAuthResult.get_Code()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthResult.Error">
            <summary>Sets the stub of FacebookOAuthResult.get_Error()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthResult.ErrorDescription">
            <summary>Sets the stub of FacebookOAuthResult.get_ErrorDescription()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthResult.ErrorReason">
            <summary>Sets the stub of FacebookOAuthResult.get_ErrorReason()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthResult.Expires">
            <summary>Sets the stub of FacebookOAuthResult.get_Expires()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthResult.IsSuccess">
            <summary>Sets the stub of FacebookOAuthResult.get_IsSuccess()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookOAuthResult.State">
            <summary>Sets the stub of FacebookOAuthResult.get_State()</summary>
        </member>
        <member name="T:Facebook.Fakes.StubFacebookUploadProgressChangedEventArgs">
            <summary>Stub type of Facebook.FacebookUploadProgressChangedEventArgs</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookUploadProgressChangedEventArgs.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int32,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubFacebookUploadProgressChangedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubFacebookUploadProgressChangedEventArgs</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookUploadProgressChangedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookUploadProgressChangedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubFacebookUploadProgressChangedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Facebook.Fakes.StubHttpWebRequestWrapper">
            <summary>Stub type of Facebook.HttpWebRequestWrapper</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.#ctor(System.Net.HttpWebRequest)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.Abort">
            <summary>Sets the stub of HttpWebRequestWrapper.Abort()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.Abort01">
            <summary>Sets the stub of HttpWebRequestWrapper.Abort()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.AcceptGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_Accept()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.AcceptSetString">
            <summary>Sets the stub of HttpWebRequestWrapper.set_Accept(String value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.AllowAutoRedirectGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_AllowAutoRedirect()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.AllowAutoRedirectSetBoolean">
            <summary>Sets the stub of HttpWebRequestWrapper.set_AllowAutoRedirect(Boolean value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.AllowWriteStreamBufferingGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_AllowWriteStreamBuffering()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.AllowWriteStreamBufferingSetBoolean">
            <summary>Sets the stub of HttpWebRequestWrapper.set_AllowWriteStreamBuffering(Boolean value)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToAccept">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.Accept as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToAllowAutoRedirect">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.AllowAutoRedirect as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToAllowWriteStreamBuffering">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.AllowWriteStreamBuffering as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToAutomaticDecompression">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.AutomaticDecompression as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToConnection">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.Connection as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToContentLength">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.ContentLength as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToContentType">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.ContentType as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToCookieContainer">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.CookieContainer as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToCredentials">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.Credentials as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToExpect">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.Expect as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToHeaders">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.Headers as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToIfModifiedSince">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.IfModifiedSince as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToIsCancelled">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.IsCancelled as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToMethod">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.Method as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToProxy">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.Proxy as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToReadWriteTimeout">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.ReadWriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToReferer">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.Referer as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToTimeout">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.Timeout as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToTransferEncoding">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.TransferEncoding as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.AttachBackingFieldToUserAgent">
            <summary>Attaches delegates to emulate StubHttpWebRequestWrapper.UserAgent as a property with a backing field.</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.AutomaticDecompressionGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_AutomaticDecompression()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.AutomaticDecompressionSetDecompressionMethods">
            <summary>Sets the stub of HttpWebRequestWrapper.set_AutomaticDecompression(DecompressionMethods value)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.BeginGetRequestStream(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of HttpWebRequestWrapper.BeginGetRequestStream(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.BeginGetRequestStreamAsyncCallbackObject">
            <summary>Sets the stub of HttpWebRequestWrapper.BeginGetRequestStream(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.BeginGetResponse(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of HttpWebRequestWrapper.BeginGetResponse(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.BeginGetResponseAsyncCallbackObject">
            <summary>Sets the stub of HttpWebRequestWrapper.BeginGetResponse(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.ConnectionGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_Connection()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.ConnectionSetString">
            <summary>Sets the stub of HttpWebRequestWrapper.set_Connection(String value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.ContentLengthGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_ContentLength()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.ContentLengthSetInt64">
            <summary>Sets the stub of HttpWebRequestWrapper.set_ContentLength(Int64 value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.ContentTypeGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_ContentType()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.ContentTypeSetString">
            <summary>Sets the stub of HttpWebRequestWrapper.set_ContentType(String value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.CookieContainerGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_CookieContainer()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.CookieContainerSetCookieContainer">
            <summary>Sets the stub of HttpWebRequestWrapper.set_CookieContainer(CookieContainer value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.CredentialsGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_Credentials()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.CredentialsSetICredentials">
            <summary>Sets the stub of HttpWebRequestWrapper.set_Credentials(ICredentials value)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.EndGetRequestStream(System.IAsyncResult)">
            <summary>Sets the stub of HttpWebRequestWrapper.EndGetRequestStream(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.EndGetRequestStreamIAsyncResult">
            <summary>Sets the stub of HttpWebRequestWrapper.EndGetRequestStream(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.EndGetResponse(System.IAsyncResult)">
            <summary>Sets the stub of HttpWebRequestWrapper.EndGetResponse(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.EndGetResponseIAsyncResult">
            <summary>Sets the stub of HttpWebRequestWrapper.EndGetResponse(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.ExpectGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_Expect()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.ExpectSetString">
            <summary>Sets the stub of HttpWebRequestWrapper.set_Expect(String value)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.GetRequestStream">
            <summary>Sets the stub of HttpWebRequestWrapper.GetRequestStream()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.GetRequestStream01">
            <summary>Sets the stub of HttpWebRequestWrapper.GetRequestStream()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.GetRequestStreamAsync">
            <summary>Sets the stub of HttpWebRequestWrapper.GetRequestStreamAsync()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.GetRequestStreamAsync01">
            <summary>Sets the stub of HttpWebRequestWrapper.GetRequestStreamAsync()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.GetResponse">
            <summary>Sets the stub of HttpWebRequestWrapper.GetResponse()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.GetResponse01">
            <summary>Sets the stub of HttpWebRequestWrapper.GetResponse()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.GetResponseAsync">
            <summary>Sets the stub of HttpWebRequestWrapper.GetResponseAsync()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.GetResponseAsync01">
            <summary>Sets the stub of HttpWebRequestWrapper.GetResponseAsync()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.HeadersGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_Headers()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.HeadersSetWebHeaderCollection">
            <summary>Sets the stub of HttpWebRequestWrapper.set_Headers(WebHeaderCollection value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.IfModifiedSinceGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_IfModifiedSince()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.IfModifiedSinceSetDateTime">
            <summary>Sets the stub of HttpWebRequestWrapper.set_IfModifiedSince(DateTime value)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.InitializeStub">
            <summary>Initializes a new instance of type StubHttpWebRequestWrapper</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.IsCancelledGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_IsCancelled()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.IsCancelledSetBoolean">
            <summary>Sets the stub of HttpWebRequestWrapper.set_IsCancelled(Boolean value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.MethodGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_Method()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.MethodSetString">
            <summary>Sets the stub of HttpWebRequestWrapper.set_Method(String value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.ProxyGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_Proxy()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.ProxySetIWebProxy">
            <summary>Sets the stub of HttpWebRequestWrapper.set_Proxy(IWebProxy value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.ReadWriteTimeoutGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_ReadWriteTimeout()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.ReadWriteTimeoutSetInt32">
            <summary>Sets the stub of HttpWebRequestWrapper.set_ReadWriteTimeout(Int32 value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.RefererGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_Referer()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.RefererSetString">
            <summary>Sets the stub of HttpWebRequestWrapper.set_Referer(String value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.RequestUriGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_RequestUri()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.ServicePointGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_ServicePoint()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.TimeoutGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_Timeout()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.TimeoutSetInt32">
            <summary>Sets the stub of HttpWebRequestWrapper.set_Timeout(Int32 value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.TransferEncodingGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_TransferEncoding()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.TransferEncodingSetString">
            <summary>Sets the stub of HttpWebRequestWrapper.set_TransferEncoding(String value)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.TrySetContentLength(System.Int64)">
            <summary>Sets the stub of HttpWebRequestWrapper.TrySetContentLength(Int64 contentLength)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.TrySetContentLengthInt64">
            <summary>Sets the stub of HttpWebRequestWrapper.TrySetContentLength(Int64 contentLength)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebRequestWrapper.TrySetUserAgent(System.String)">
            <summary>Sets the stub of HttpWebRequestWrapper.TrySetUserAgent(String userAgent)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.TrySetUserAgentString">
            <summary>Sets the stub of HttpWebRequestWrapper.TrySetUserAgent(String userAgent)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.UserAgentGet">
            <summary>Sets the stub of HttpWebRequestWrapper.get_UserAgent()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebRequestWrapper.UserAgentSetString">
            <summary>Sets the stub of HttpWebRequestWrapper.set_UserAgent(String value)</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.Accept">
            <summary>Sets the stub of HttpWebRequestWrapper.get_Accept()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.AllowAutoRedirect">
            <summary>Sets the stub of HttpWebRequestWrapper.get_AllowAutoRedirect()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.AllowWriteStreamBuffering">
            <summary>Sets the stub of HttpWebRequestWrapper.get_AllowWriteStreamBuffering()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.AutomaticDecompression">
            <summary>Sets the stub of HttpWebRequestWrapper.get_AutomaticDecompression()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.Connection">
            <summary>Sets the stub of HttpWebRequestWrapper.get_Connection()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.ContentLength">
            <summary>Sets the stub of HttpWebRequestWrapper.get_ContentLength()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.ContentType">
            <summary>Sets the stub of HttpWebRequestWrapper.get_ContentType()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.CookieContainer">
            <summary>Sets the stub of HttpWebRequestWrapper.get_CookieContainer()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.Credentials">
            <summary>Sets the stub of HttpWebRequestWrapper.get_Credentials()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.Expect">
            <summary>Sets the stub of HttpWebRequestWrapper.get_Expect()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.Headers">
            <summary>Sets the stub of HttpWebRequestWrapper.get_Headers()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.IfModifiedSince">
            <summary>Sets the stub of HttpWebRequestWrapper.get_IfModifiedSince()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.IsCancelled">
            <summary>Sets the stub of HttpWebRequestWrapper.get_IsCancelled()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.Method">
            <summary>Sets the stub of HttpWebRequestWrapper.get_Method()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.Proxy">
            <summary>Sets the stub of HttpWebRequestWrapper.get_Proxy()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.ReadWriteTimeout">
            <summary>Sets the stub of HttpWebRequestWrapper.get_ReadWriteTimeout()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.Referer">
            <summary>Sets the stub of HttpWebRequestWrapper.get_Referer()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.RequestUri">
            <summary>Sets the stub of HttpWebRequestWrapper.get_RequestUri()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.ServicePoint">
            <summary>Sets the stub of HttpWebRequestWrapper.get_ServicePoint()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.Timeout">
            <summary>Sets the stub of HttpWebRequestWrapper.get_Timeout()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.TransferEncoding">
            <summary>Sets the stub of HttpWebRequestWrapper.get_TransferEncoding()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebRequestWrapper.UserAgent">
            <summary>Sets the stub of HttpWebRequestWrapper.get_UserAgent()</summary>
        </member>
        <member name="T:Facebook.Fakes.StubHttpWebResponseWrapper">
            <summary>Stub type of Facebook.HttpWebResponseWrapper</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebResponseWrapper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebResponseWrapper.#ctor(System.Net.HttpWebResponse)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebResponseWrapper.CharacterSetGet">
            <summary>Sets the stub of HttpWebResponseWrapper.get_CharacterSet()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebResponseWrapper.ContentEncodingGet">
            <summary>Sets the stub of HttpWebResponseWrapper.get_ContentEncoding()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebResponseWrapper.ContentLengthGet">
            <summary>Sets the stub of HttpWebResponseWrapper.get_ContentLength()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebResponseWrapper.ContentTypeGet">
            <summary>Sets the stub of HttpWebResponseWrapper.get_ContentType()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebResponseWrapper.CookiesGet">
            <summary>Sets the stub of HttpWebResponseWrapper.get_Cookies()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebResponseWrapper.GetResponseStream">
            <summary>Sets the stub of HttpWebResponseWrapper.GetResponseStream()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebResponseWrapper.GetResponseStream01">
            <summary>Sets the stub of HttpWebResponseWrapper.GetResponseStream()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebResponseWrapper.HeadersGet">
            <summary>Sets the stub of HttpWebResponseWrapper.get_Headers()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubHttpWebResponseWrapper.InitializeStub">
            <summary>Initializes a new instance of type StubHttpWebResponseWrapper</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebResponseWrapper.IsMutuallyAuthenticatedGet">
            <summary>Sets the stub of HttpWebResponseWrapper.get_IsMutuallyAuthenticated()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebResponseWrapper.LastModifiedGet">
            <summary>Sets the stub of HttpWebResponseWrapper.get_LastModified()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebResponseWrapper.MethodGet">
            <summary>Sets the stub of HttpWebResponseWrapper.get_Method()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebResponseWrapper.ProtocolVersionGet">
            <summary>Sets the stub of HttpWebResponseWrapper.get_ProtocolVersion()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebResponseWrapper.ResponseUriGet">
            <summary>Sets the stub of HttpWebResponseWrapper.get_ResponseUri()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebResponseWrapper.ServerGet">
            <summary>Sets the stub of HttpWebResponseWrapper.get_Server()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebResponseWrapper.StatusCodeGet">
            <summary>Sets the stub of HttpWebResponseWrapper.get_StatusCode()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubHttpWebResponseWrapper.StatusDescriptionGet">
            <summary>Sets the stub of HttpWebResponseWrapper.get_StatusDescription()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebResponseWrapper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebResponseWrapper.CharacterSet">
            <summary>Sets the stub of HttpWebResponseWrapper.get_CharacterSet()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebResponseWrapper.ContentEncoding">
            <summary>Sets the stub of HttpWebResponseWrapper.get_ContentEncoding()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebResponseWrapper.ContentLength">
            <summary>Sets the stub of HttpWebResponseWrapper.get_ContentLength()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebResponseWrapper.ContentType">
            <summary>Sets the stub of HttpWebResponseWrapper.get_ContentType()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebResponseWrapper.Cookies">
            <summary>Sets the stub of HttpWebResponseWrapper.get_Cookies()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebResponseWrapper.Headers">
            <summary>Sets the stub of HttpWebResponseWrapper.get_Headers()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebResponseWrapper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebResponseWrapper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebResponseWrapper.IsMutuallyAuthenticated">
            <summary>Sets the stub of HttpWebResponseWrapper.get_IsMutuallyAuthenticated()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebResponseWrapper.LastModified">
            <summary>Sets the stub of HttpWebResponseWrapper.get_LastModified()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebResponseWrapper.Method">
            <summary>Sets the stub of HttpWebResponseWrapper.get_Method()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebResponseWrapper.ProtocolVersion">
            <summary>Sets the stub of HttpWebResponseWrapper.get_ProtocolVersion()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebResponseWrapper.ResponseUri">
            <summary>Sets the stub of HttpWebResponseWrapper.get_ResponseUri()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebResponseWrapper.Server">
            <summary>Sets the stub of HttpWebResponseWrapper.get_Server()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebResponseWrapper.StatusCode">
            <summary>Sets the stub of HttpWebResponseWrapper.get_StatusCode()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubHttpWebResponseWrapper.StatusDescription">
            <summary>Sets the stub of HttpWebResponseWrapper.get_StatusDescription()</summary>
        </member>
        <member name="T:Facebook.Fakes.StubJsonArray">
            <summary>Stub type of Facebook.JsonArray</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonArray.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonArray.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonArray.InitializeStub">
            <summary>Initializes a new instance of type StubJsonArray</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonArray.ToString">
            <summary>Sets the stub of JsonArray.ToString()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubJsonArray.ToString01">
            <summary>Sets the stub of JsonArray.ToString()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubJsonArray.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Facebook.Fakes.StubJsonArray.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubJsonArray.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Facebook.Fakes.StubJsonObject">
            <summary>Stub type of Facebook.JsonObject</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonObject.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonObject.GetDynamicMemberNames">
            <summary>Sets the stub of JsonObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubJsonObject.GetDynamicMemberNames01">
            <summary>Sets the stub of JsonObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonObject.GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubJsonObject.GetMetaObjectExpression">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonObject.InitializeStub">
            <summary>Initializes a new instance of type StubJsonObject</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonObject.ToString">
            <summary>Sets the stub of JsonObject.ToString()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubJsonObject.ToString01">
            <summary>Sets the stub of JsonObject.ToString()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonObject.TryBinaryOperation(System.Dynamic.BinaryOperationBinder,System.Object,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubJsonObject.TryBinaryOperationBinaryOperationBinderObjectObjectOut">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonObject.TryConvert(System.Dynamic.ConvertBinder,System.Object@)">
            <summary>Sets the stub of JsonObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubJsonObject.TryConvertConvertBinderObjectOut">
            <summary>Sets the stub of JsonObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonObject.TryCreateInstance(System.Dynamic.CreateInstanceBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubJsonObject.TryCreateInstanceCreateInstanceBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonObject.TryDeleteIndex(System.Dynamic.DeleteIndexBinder,System.Object[])">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubJsonObject.TryDeleteIndexDeleteIndexBinderObjectArray">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonObject.TryDeleteMember(System.Dynamic.DeleteMemberBinder)">
            <summary>Sets the stub of JsonObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubJsonObject.TryDeleteMemberDeleteMemberBinder">
            <summary>Sets the stub of JsonObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of JsonObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubJsonObject.TryGetIndexGetIndexBinderObjectArrayObjectOut">
            <summary>Sets the stub of JsonObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>Sets the stub of JsonObject.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubJsonObject.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the stub of JsonObject.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonObject.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubJsonObject.TryInvokeInvokeBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonObject.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubJsonObject.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonObject.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
            <summary>Sets the stub of JsonObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubJsonObject.TrySetIndexSetIndexBinderObjectArrayObject">
            <summary>Sets the stub of JsonObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>Sets the stub of JsonObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubJsonObject.TrySetMemberSetMemberBinderObject">
            <summary>Sets the stub of JsonObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubJsonObject.TryUnaryOperation(System.Dynamic.UnaryOperationBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubJsonObject.TryUnaryOperationUnaryOperationBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Facebook.Fakes.StubJsonObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Facebook.Fakes.StubJsonObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubJsonObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Facebook.Fakes.StubWebExceptionWrapper">
            <summary>Stub type of Facebook.WebExceptionWrapper</summary>
        </member>
        <member name="M:Facebook.Fakes.StubWebExceptionWrapper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubWebExceptionWrapper.#ctor(System.Net.WebException)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Facebook.Fakes.StubWebExceptionWrapper.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Facebook.Fakes.StubWebExceptionWrapper.ActualWebExceptionGet">
            <summary>Sets the stub of WebExceptionWrapper.get_ActualWebException()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubWebExceptionWrapper.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubWebExceptionWrapper.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Facebook.Fakes.StubWebExceptionWrapper.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubWebExceptionWrapper.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Facebook.Fakes.StubWebExceptionWrapper.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubWebExceptionWrapper.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubWebExceptionWrapper.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubWebExceptionWrapper.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubWebExceptionWrapper.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubWebExceptionWrapper.GetResponse">
            <summary>Sets the stub of WebExceptionWrapper.GetResponse()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubWebExceptionWrapper.GetResponse01">
            <summary>Sets the stub of WebExceptionWrapper.GetResponse()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubWebExceptionWrapper.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubWebExceptionWrapper.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Facebook.Fakes.StubWebExceptionWrapper.InitializeStub">
            <summary>Initializes a new instance of type StubWebExceptionWrapper</summary>
        </member>
        <member name="F:Facebook.Fakes.StubWebExceptionWrapper.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubWebExceptionWrapper.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubWebExceptionWrapper.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Facebook.Fakes.StubWebExceptionWrapper.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubWebExceptionWrapper.StatusGet">
            <summary>Sets the stub of WebExceptionWrapper.get_Status()</summary>
        </member>
        <member name="M:Facebook.Fakes.StubWebExceptionWrapper.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Facebook.Fakes.StubWebExceptionWrapper.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubWebExceptionWrapper.ActualWebException">
            <summary>Sets the stub of WebExceptionWrapper.get_ActualWebException()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubWebExceptionWrapper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Facebook.Fakes.StubWebExceptionWrapper.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubWebExceptionWrapper.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubWebExceptionWrapper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubWebExceptionWrapper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Facebook.Fakes.StubWebExceptionWrapper.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubWebExceptionWrapper.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubWebExceptionWrapper.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="P:Facebook.Fakes.StubWebExceptionWrapper.Status">
            <summary>Sets the stub of WebExceptionWrapper.get_Status()</summary>
        </member>
    </members>
</doc>
